{"ast":null,"code":"// Copyright 2016 Joyent, Inc.\nvar x509 = require('./x509');\n\nmodule.exports = {\n  read: read,\n  verify: x509.verify,\n  sign: x509.sign,\n  write: write\n};\n\nvar assert = require('assert-plus');\n\nvar asn1 = require('asn1');\n\nvar Buffer = require('safer-buffer').Buffer;\n\nvar algs = require('../algs');\n\nvar utils = require('../utils');\n\nvar Key = require('../key');\n\nvar PrivateKey = require('../private-key');\n\nvar pem = require('./pem');\n\nvar Identity = require('../identity');\n\nvar Signature = require('../signature');\n\nvar Certificate = require('../certificate');\n\nfunction read(buf, options) {\n  if (typeof buf !== 'string') {\n    assert.buffer(buf, 'buf');\n    buf = buf.toString('ascii');\n  }\n\n  var lines = buf.trim().split(/[\\r\\n]+/g);\n  var m;\n  var si = -1;\n\n  while (!m && si < lines.length) {\n    m = lines[++si].match(\n    /*JSSTYLED*/\n    /[-]+[ ]*BEGIN CERTIFICATE[ ]*[-]+/);\n  }\n\n  assert.ok(m, 'invalid PEM header');\n  var m2;\n  var ei = lines.length;\n\n  while (!m2 && ei > 0) {\n    m2 = lines[--ei].match(\n    /*JSSTYLED*/\n    /[-]+[ ]*END CERTIFICATE[ ]*[-]+/);\n  }\n\n  assert.ok(m2, 'invalid PEM footer');\n  lines = lines.slice(si, ei + 1);\n  var headers = {};\n\n  while (true) {\n    lines = lines.slice(1);\n    m = lines[0].match(\n    /*JSSTYLED*/\n    /^([A-Za-z0-9-]+): (.+)$/);\n    if (!m) break;\n    headers[m[1].toLowerCase()] = m[2];\n  }\n  /* Chop off the first and last lines */\n\n\n  lines = lines.slice(0, -1).join('');\n  buf = Buffer.from(lines, 'base64');\n  return x509.read(buf, options);\n}\n\nfunction write(cert, options) {\n  var dbuf = x509.write(cert, options);\n  var header = 'CERTIFICATE';\n  var tmp = dbuf.toString('base64');\n  var len = tmp.length + tmp.length / 64 + 18 + 16 + header.length * 2 + 10;\n  var buf = Buffer.alloc(len);\n  var o = 0;\n  o += buf.write('-----BEGIN ' + header + '-----\\n', o);\n\n  for (var i = 0; i < tmp.length;) {\n    var limit = i + 64;\n    if (limit > tmp.length) limit = tmp.length;\n    o += buf.write(tmp.slice(i, limit), o);\n    buf[o++] = 10;\n    i = limit;\n  }\n\n  o += buf.write('-----END ' + header + '-----\\n', o);\n  return buf.slice(0, o);\n}","map":{"version":3,"names":["x509","require","module","exports","read","verify","sign","write","assert","asn1","Buffer","algs","utils","Key","PrivateKey","pem","Identity","Signature","Certificate","buf","options","buffer","toString","lines","trim","split","m","si","length","match","ok","m2","ei","slice","headers","toLowerCase","join","from","cert","dbuf","header","tmp","len","alloc","o","i","limit"],"sources":["D:/siit/Y4S1/senior_project/web_practice1/my-app/node_modules/sshpk/lib/formats/x509-pem.js"],"sourcesContent":["// Copyright 2016 Joyent, Inc.\n\nvar x509 = require('./x509');\n\nmodule.exports = {\n\tread: read,\n\tverify: x509.verify,\n\tsign: x509.sign,\n\twrite: write\n};\n\nvar assert = require('assert-plus');\nvar asn1 = require('asn1');\nvar Buffer = require('safer-buffer').Buffer;\nvar algs = require('../algs');\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\nvar pem = require('./pem');\nvar Identity = require('../identity');\nvar Signature = require('../signature');\nvar Certificate = require('../certificate');\n\nfunction read(buf, options) {\n\tif (typeof (buf) !== 'string') {\n\t\tassert.buffer(buf, 'buf');\n\t\tbuf = buf.toString('ascii');\n\t}\n\n\tvar lines = buf.trim().split(/[\\r\\n]+/g);\n\n\tvar m;\n\tvar si = -1;\n\twhile (!m && si < lines.length) {\n\t\tm = lines[++si].match(/*JSSTYLED*/\n\t\t    /[-]+[ ]*BEGIN CERTIFICATE[ ]*[-]+/);\n\t}\n\tassert.ok(m, 'invalid PEM header');\n\n\tvar m2;\n\tvar ei = lines.length;\n\twhile (!m2 && ei > 0) {\n\t\tm2 = lines[--ei].match(/*JSSTYLED*/\n\t\t    /[-]+[ ]*END CERTIFICATE[ ]*[-]+/);\n\t}\n\tassert.ok(m2, 'invalid PEM footer');\n\n\tlines = lines.slice(si, ei + 1);\n\n\tvar headers = {};\n\twhile (true) {\n\t\tlines = lines.slice(1);\n\t\tm = lines[0].match(/*JSSTYLED*/\n\t\t    /^([A-Za-z0-9-]+): (.+)$/);\n\t\tif (!m)\n\t\t\tbreak;\n\t\theaders[m[1].toLowerCase()] = m[2];\n\t}\n\n\t/* Chop off the first and last lines */\n\tlines = lines.slice(0, -1).join('');\n\tbuf = Buffer.from(lines, 'base64');\n\n\treturn (x509.read(buf, options));\n}\n\nfunction write(cert, options) {\n\tvar dbuf = x509.write(cert, options);\n\n\tvar header = 'CERTIFICATE';\n\tvar tmp = dbuf.toString('base64');\n\tvar len = tmp.length + (tmp.length / 64) +\n\t    18 + 16 + header.length*2 + 10;\n\tvar buf = Buffer.alloc(len);\n\tvar o = 0;\n\to += buf.write('-----BEGIN ' + header + '-----\\n', o);\n\tfor (var i = 0; i < tmp.length; ) {\n\t\tvar limit = i + 64;\n\t\tif (limit > tmp.length)\n\t\t\tlimit = tmp.length;\n\t\to += buf.write(tmp.slice(i, limit), o);\n\t\tbuf[o++] = 10;\n\t\ti = limit;\n\t}\n\to += buf.write('-----END ' + header + '-----\\n', o);\n\n\treturn (buf.slice(0, o));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}