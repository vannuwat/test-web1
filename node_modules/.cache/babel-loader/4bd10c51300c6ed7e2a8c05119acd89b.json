{"ast":null,"code":"/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n\nvar net = require('net');\n\nvar urlParse = require('url').parse;\n\nvar util = require('util');\n\nvar pubsuffix = require('./pubsuffix-psl');\n\nvar Store = require('./store').Store;\n\nvar MemoryCookieStore = require('./memstore').MemoryCookieStore;\n\nvar pathMatch = require('./pathMatch').pathMatch;\n\nvar VERSION = require('./version');\n\nvar punycode;\n\ntry {\n  punycode = require('punycode');\n} catch (e) {\n  console.warn(\"tough-cookie: can't load punycode; won't use punycode for domain normalization\");\n} // From RFC6265 S4.1.1\n// note that it excludes \\x3B \";\"\n\n\nvar COOKIE_OCTETS = /^[\\x21\\x23-\\x2B\\x2D-\\x3A\\x3C-\\x5B\\x5D-\\x7E]+$/;\nvar CONTROL_CHARS = /[\\x00-\\x1F]/; // From Chromium // '\\r', '\\n' and '\\0' should be treated as a terminator in\n// the \"relaxed\" mode, see:\n// https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/parsed_cookie.cc#L60\n\nvar TERMINATORS = ['\\n', '\\r', '\\0']; // RFC6265 S4.1.1 defines path value as 'any CHAR except CTLs or \";\"'\n// Note ';' is \\x3B\n\nvar PATH_VALUE = /[\\x20-\\x3A\\x3C-\\x7E]+/; // date-time parsing constants (RFC6265 S5.1.1)\n\nvar DATE_DELIM = /[\\x09\\x20-\\x2F\\x3B-\\x40\\x5B-\\x60\\x7B-\\x7E]/;\nvar MONTH_TO_NUM = {\n  jan: 0,\n  feb: 1,\n  mar: 2,\n  apr: 3,\n  may: 4,\n  jun: 5,\n  jul: 6,\n  aug: 7,\n  sep: 8,\n  oct: 9,\n  nov: 10,\n  dec: 11\n};\nvar NUM_TO_MONTH = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nvar NUM_TO_DAY = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nvar MAX_TIME = 2147483647000; // 31-bit max\n\nvar MIN_TIME = 0; // 31-bit min\n\n/*\n * Parses a Natural number (i.e., non-negative integer) with either the\n *    <min>*<max>DIGIT ( non-digit *OCTET )\n * or\n *    <min>*<max>DIGIT\n * grammar (RFC6265 S5.1.1).\n *\n * The \"trailingOK\" boolean controls if the grammar accepts a\n * \"( non-digit *OCTET )\" trailer.\n */\n\nfunction parseDigits(token, minDigits, maxDigits, trailingOK) {\n  var count = 0;\n\n  while (count < token.length) {\n    var c = token.charCodeAt(count); // \"non-digit = %x00-2F / %x3A-FF\"\n\n    if (c <= 0x2F || c >= 0x3A) {\n      break;\n    }\n\n    count++;\n  } // constrain to a minimum and maximum number of digits.\n\n\n  if (count < minDigits || count > maxDigits) {\n    return null;\n  }\n\n  if (!trailingOK && count != token.length) {\n    return null;\n  }\n\n  return parseInt(token.substr(0, count), 10);\n}\n\nfunction parseTime(token) {\n  var parts = token.split(':');\n  var result = [0, 0, 0];\n  /* RF6256 S5.1.1:\n   *      time            = hms-time ( non-digit *OCTET )\n   *      hms-time        = time-field \":\" time-field \":\" time-field\n   *      time-field      = 1*2DIGIT\n   */\n\n  if (parts.length !== 3) {\n    return null;\n  }\n\n  for (var i = 0; i < 3; i++) {\n    // \"time-field\" must be strictly \"1*2DIGIT\", HOWEVER, \"hms-time\" can be\n    // followed by \"( non-digit *OCTET )\" so therefore the last time-field can\n    // have a trailer\n    var trailingOK = i == 2;\n    var num = parseDigits(parts[i], 1, 2, trailingOK);\n\n    if (num === null) {\n      return null;\n    }\n\n    result[i] = num;\n  }\n\n  return result;\n}\n\nfunction parseMonth(token) {\n  token = String(token).substr(0, 3).toLowerCase();\n  var num = MONTH_TO_NUM[token];\n  return num >= 0 ? num : null;\n}\n/*\n * RFC6265 S5.1.1 date parser (see RFC for full grammar)\n */\n\n\nfunction parseDate(str) {\n  if (!str) {\n    return;\n  }\n  /* RFC6265 S5.1.1:\n   * 2. Process each date-token sequentially in the order the date-tokens\n   * appear in the cookie-date\n   */\n\n\n  var tokens = str.split(DATE_DELIM);\n\n  if (!tokens) {\n    return;\n  }\n\n  var hour = null;\n  var minute = null;\n  var second = null;\n  var dayOfMonth = null;\n  var month = null;\n  var year = null;\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i].trim();\n\n    if (!token.length) {\n      continue;\n    }\n\n    var result;\n    /* 2.1. If the found-time flag is not set and the token matches the time\n     * production, set the found-time flag and set the hour- value,\n     * minute-value, and second-value to the numbers denoted by the digits in\n     * the date-token, respectively.  Skip the remaining sub-steps and continue\n     * to the next date-token.\n     */\n\n    if (second === null) {\n      result = parseTime(token);\n\n      if (result) {\n        hour = result[0];\n        minute = result[1];\n        second = result[2];\n        continue;\n      }\n    }\n    /* 2.2. If the found-day-of-month flag is not set and the date-token matches\n     * the day-of-month production, set the found-day-of- month flag and set\n     * the day-of-month-value to the number denoted by the date-token.  Skip\n     * the remaining sub-steps and continue to the next date-token.\n     */\n\n\n    if (dayOfMonth === null) {\n      // \"day-of-month = 1*2DIGIT ( non-digit *OCTET )\"\n      result = parseDigits(token, 1, 2, true);\n\n      if (result !== null) {\n        dayOfMonth = result;\n        continue;\n      }\n    }\n    /* 2.3. If the found-month flag is not set and the date-token matches the\n     * month production, set the found-month flag and set the month-value to\n     * the month denoted by the date-token.  Skip the remaining sub-steps and\n     * continue to the next date-token.\n     */\n\n\n    if (month === null) {\n      result = parseMonth(token);\n\n      if (result !== null) {\n        month = result;\n        continue;\n      }\n    }\n    /* 2.4. If the found-year flag is not set and the date-token matches the\n     * year production, set the found-year flag and set the year-value to the\n     * number denoted by the date-token.  Skip the remaining sub-steps and\n     * continue to the next date-token.\n     */\n\n\n    if (year === null) {\n      // \"year = 2*4DIGIT ( non-digit *OCTET )\"\n      result = parseDigits(token, 2, 4, true);\n\n      if (result !== null) {\n        year = result;\n        /* From S5.1.1:\n         * 3.  If the year-value is greater than or equal to 70 and less\n         * than or equal to 99, increment the year-value by 1900.\n         * 4.  If the year-value is greater than or equal to 0 and less\n         * than or equal to 69, increment the year-value by 2000.\n         */\n\n        if (year >= 70 && year <= 99) {\n          year += 1900;\n        } else if (year >= 0 && year <= 69) {\n          year += 2000;\n        }\n      }\n    }\n  }\n  /* RFC 6265 S5.1.1\n   * \"5. Abort these steps and fail to parse the cookie-date if:\n   *     *  at least one of the found-day-of-month, found-month, found-\n   *        year, or found-time flags is not set,\n   *     *  the day-of-month-value is less than 1 or greater than 31,\n   *     *  the year-value is less than 1601,\n   *     *  the hour-value is greater than 23,\n   *     *  the minute-value is greater than 59, or\n   *     *  the second-value is greater than 59.\n   *     (Note that leap seconds cannot be represented in this syntax.)\"\n   *\n   * So, in order as above:\n   */\n\n\n  if (dayOfMonth === null || month === null || year === null || second === null || dayOfMonth < 1 || dayOfMonth > 31 || year < 1601 || hour > 23 || minute > 59 || second > 59) {\n    return;\n  }\n\n  return new Date(Date.UTC(year, month, dayOfMonth, hour, minute, second));\n}\n\nfunction formatDate(date) {\n  var d = date.getUTCDate();\n  d = d >= 10 ? d : '0' + d;\n  var h = date.getUTCHours();\n  h = h >= 10 ? h : '0' + h;\n  var m = date.getUTCMinutes();\n  m = m >= 10 ? m : '0' + m;\n  var s = date.getUTCSeconds();\n  s = s >= 10 ? s : '0' + s;\n  return NUM_TO_DAY[date.getUTCDay()] + ', ' + d + ' ' + NUM_TO_MONTH[date.getUTCMonth()] + ' ' + date.getUTCFullYear() + ' ' + h + ':' + m + ':' + s + ' GMT';\n} // S5.1.2 Canonicalized Host Names\n\n\nfunction canonicalDomain(str) {\n  if (str == null) {\n    return null;\n  }\n\n  str = str.trim().replace(/^\\./, ''); // S4.1.2.3 & S5.2.3: ignore leading .\n  // convert to IDN if any non-ASCII characters\n\n  if (punycode && /[^\\u0001-\\u007f]/.test(str)) {\n    str = punycode.toASCII(str);\n  }\n\n  return str.toLowerCase();\n} // S5.1.3 Domain Matching\n\n\nfunction domainMatch(str, domStr, canonicalize) {\n  if (str == null || domStr == null) {\n    return null;\n  }\n\n  if (canonicalize !== false) {\n    str = canonicalDomain(str);\n    domStr = canonicalDomain(domStr);\n  }\n  /*\n   * \"The domain string and the string are identical. (Note that both the\n   * domain string and the string will have been canonicalized to lower case at\n   * this point)\"\n   */\n\n\n  if (str == domStr) {\n    return true;\n  }\n  /* \"All of the following [three] conditions hold:\" (order adjusted from the RFC) */\n\n  /* \"* The string is a host name (i.e., not an IP address).\" */\n\n\n  if (net.isIP(str)) {\n    return false;\n  }\n  /* \"* The domain string is a suffix of the string\" */\n\n\n  var idx = str.indexOf(domStr);\n\n  if (idx <= 0) {\n    return false; // it's a non-match (-1) or prefix (0)\n  } // e.g \"a.b.c\".indexOf(\"b.c\") === 2\n  // 5 === 3+2\n\n\n  if (str.length !== domStr.length + idx) {\n    // it's not a suffix\n    return false;\n  }\n  /* \"* The last character of the string that is not included in the domain\n  * string is a %x2E (\".\") character.\" */\n\n\n  if (str.substr(idx - 1, 1) !== '.') {\n    return false;\n  }\n\n  return true;\n} // RFC6265 S5.1.4 Paths and Path-Match\n\n/*\n * \"The user agent MUST use an algorithm equivalent to the following algorithm\n * to compute the default-path of a cookie:\"\n *\n * Assumption: the path (and not query part or absolute uri) is passed in.\n */\n\n\nfunction defaultPath(path) {\n  // \"2. If the uri-path is empty or if the first character of the uri-path is not\n  // a %x2F (\"/\") character, output %x2F (\"/\") and skip the remaining steps.\n  if (!path || path.substr(0, 1) !== \"/\") {\n    return \"/\";\n  } // \"3. If the uri-path contains no more than one %x2F (\"/\") character, output\n  // %x2F (\"/\") and skip the remaining step.\"\n\n\n  if (path === \"/\") {\n    return path;\n  }\n\n  var rightSlash = path.lastIndexOf(\"/\");\n\n  if (rightSlash === 0) {\n    return \"/\";\n  } // \"4. Output the characters of the uri-path from the first character up to,\n  // but not including, the right-most %x2F (\"/\").\"\n\n\n  return path.slice(0, rightSlash);\n}\n\nfunction trimTerminator(str) {\n  for (var t = 0; t < TERMINATORS.length; t++) {\n    var terminatorIdx = str.indexOf(TERMINATORS[t]);\n\n    if (terminatorIdx !== -1) {\n      str = str.substr(0, terminatorIdx);\n    }\n  }\n\n  return str;\n}\n\nfunction parseCookiePair(cookiePair, looseMode) {\n  cookiePair = trimTerminator(cookiePair);\n  var firstEq = cookiePair.indexOf('=');\n\n  if (looseMode) {\n    if (firstEq === 0) {\n      // '=' is immediately at start\n      cookiePair = cookiePair.substr(1);\n      firstEq = cookiePair.indexOf('='); // might still need to split on '='\n    }\n  } else {\n    // non-loose mode\n    if (firstEq <= 0) {\n      // no '=' or is at start\n      return; // needs to have non-empty \"cookie-name\"\n    }\n  }\n\n  var cookieName, cookieValue;\n\n  if (firstEq <= 0) {\n    cookieName = \"\";\n    cookieValue = cookiePair.trim();\n  } else {\n    cookieName = cookiePair.substr(0, firstEq).trim();\n    cookieValue = cookiePair.substr(firstEq + 1).trim();\n  }\n\n  if (CONTROL_CHARS.test(cookieName) || CONTROL_CHARS.test(cookieValue)) {\n    return;\n  }\n\n  var c = new Cookie();\n  c.key = cookieName;\n  c.value = cookieValue;\n  return c;\n}\n\nfunction parse(str, options) {\n  if (!options || typeof options !== 'object') {\n    options = {};\n  }\n\n  str = str.trim(); // We use a regex to parse the \"name-value-pair\" part of S5.2\n\n  var firstSemi = str.indexOf(';'); // S5.2 step 1\n\n  var cookiePair = firstSemi === -1 ? str : str.substr(0, firstSemi);\n  var c = parseCookiePair(cookiePair, !!options.loose);\n\n  if (!c) {\n    return;\n  }\n\n  if (firstSemi === -1) {\n    return c;\n  } // S5.2.3 \"unparsed-attributes consist of the remainder of the set-cookie-string\n  // (including the %x3B (\";\") in question).\" plus later on in the same section\n  // \"discard the first \";\" and trim\".\n\n\n  var unparsed = str.slice(firstSemi + 1).trim(); // \"If the unparsed-attributes string is empty, skip the rest of these\n  // steps.\"\n\n  if (unparsed.length === 0) {\n    return c;\n  }\n  /*\n   * S5.2 says that when looping over the items \"[p]rocess the attribute-name\n   * and attribute-value according to the requirements in the following\n   * subsections\" for every item.  Plus, for many of the individual attributes\n   * in S5.3 it says to use the \"attribute-value of the last attribute in the\n   * cookie-attribute-list\".  Therefore, in this implementation, we overwrite\n   * the previous value.\n   */\n\n\n  var cookie_avs = unparsed.split(';');\n\n  while (cookie_avs.length) {\n    var av = cookie_avs.shift().trim();\n\n    if (av.length === 0) {\n      // happens if \";;\" appears\n      continue;\n    }\n\n    var av_sep = av.indexOf('=');\n    var av_key, av_value;\n\n    if (av_sep === -1) {\n      av_key = av;\n      av_value = null;\n    } else {\n      av_key = av.substr(0, av_sep);\n      av_value = av.substr(av_sep + 1);\n    }\n\n    av_key = av_key.trim().toLowerCase();\n\n    if (av_value) {\n      av_value = av_value.trim();\n    }\n\n    switch (av_key) {\n      case 'expires':\n        // S5.2.1\n        if (av_value) {\n          var exp = parseDate(av_value); // \"If the attribute-value failed to parse as a cookie date, ignore the\n          // cookie-av.\"\n\n          if (exp) {\n            // over and underflow not realistically a concern: V8's getTime() seems to\n            // store something larger than a 32-bit time_t (even with 32-bit node)\n            c.expires = exp;\n          }\n        }\n\n        break;\n\n      case 'max-age':\n        // S5.2.2\n        if (av_value) {\n          // \"If the first character of the attribute-value is not a DIGIT or a \"-\"\n          // character ...[or]... If the remainder of attribute-value contains a\n          // non-DIGIT character, ignore the cookie-av.\"\n          if (/^-?[0-9]+$/.test(av_value)) {\n            var delta = parseInt(av_value, 10); // \"If delta-seconds is less than or equal to zero (0), let expiry-time\n            // be the earliest representable date and time.\"\n\n            c.setMaxAge(delta);\n          }\n        }\n\n        break;\n\n      case 'domain':\n        // S5.2.3\n        // \"If the attribute-value is empty, the behavior is undefined.  However,\n        // the user agent SHOULD ignore the cookie-av entirely.\"\n        if (av_value) {\n          // S5.2.3 \"Let cookie-domain be the attribute-value without the leading %x2E\n          // (\".\") character.\"\n          var domain = av_value.trim().replace(/^\\./, '');\n\n          if (domain) {\n            // \"Convert the cookie-domain to lower case.\"\n            c.domain = domain.toLowerCase();\n          }\n        }\n\n        break;\n\n      case 'path':\n        // S5.2.4\n\n        /*\n         * \"If the attribute-value is empty or if the first character of the\n         * attribute-value is not %x2F (\"/\"):\n         *   Let cookie-path be the default-path.\n         * Otherwise:\n         *   Let cookie-path be the attribute-value.\"\n         *\n         * We'll represent the default-path as null since it depends on the\n         * context of the parsing.\n         */\n        c.path = av_value && av_value[0] === \"/\" ? av_value : null;\n        break;\n\n      case 'secure':\n        // S5.2.5\n\n        /*\n         * \"If the attribute-name case-insensitively matches the string \"Secure\",\n         * the user agent MUST append an attribute to the cookie-attribute-list\n         * with an attribute-name of Secure and an empty attribute-value.\"\n         */\n        c.secure = true;\n        break;\n\n      case 'httponly':\n        // S5.2.6 -- effectively the same as 'secure'\n        c.httpOnly = true;\n        break;\n\n      default:\n        c.extensions = c.extensions || [];\n        c.extensions.push(av);\n        break;\n    }\n  }\n\n  return c;\n} // avoid the V8 deoptimization monster!\n\n\nfunction jsonParse(str) {\n  var obj;\n\n  try {\n    obj = JSON.parse(str);\n  } catch (e) {\n    return e;\n  }\n\n  return obj;\n}\n\nfunction fromJSON(str) {\n  if (!str) {\n    return null;\n  }\n\n  var obj;\n\n  if (typeof str === 'string') {\n    obj = jsonParse(str);\n\n    if (obj instanceof Error) {\n      return null;\n    }\n  } else {\n    // assume it's an Object\n    obj = str;\n  }\n\n  var c = new Cookie();\n\n  for (var i = 0; i < Cookie.serializableProperties.length; i++) {\n    var prop = Cookie.serializableProperties[i];\n\n    if (obj[prop] === undefined || obj[prop] === Cookie.prototype[prop]) {\n      continue; // leave as prototype default\n    }\n\n    if (prop === 'expires' || prop === 'creation' || prop === 'lastAccessed') {\n      if (obj[prop] === null) {\n        c[prop] = null;\n      } else {\n        c[prop] = obj[prop] == \"Infinity\" ? \"Infinity\" : new Date(obj[prop]);\n      }\n    } else {\n      c[prop] = obj[prop];\n    }\n  }\n\n  return c;\n}\n/* Section 5.4 part 2:\n * \"*  Cookies with longer paths are listed before cookies with\n *     shorter paths.\n *\n *  *  Among cookies that have equal-length path fields, cookies with\n *     earlier creation-times are listed before cookies with later\n *     creation-times.\"\n */\n\n\nfunction cookieCompare(a, b) {\n  var cmp = 0; // descending for length: b CMP a\n\n  var aPathLen = a.path ? a.path.length : 0;\n  var bPathLen = b.path ? b.path.length : 0;\n  cmp = bPathLen - aPathLen;\n\n  if (cmp !== 0) {\n    return cmp;\n  } // ascending for time: a CMP b\n\n\n  var aTime = a.creation ? a.creation.getTime() : MAX_TIME;\n  var bTime = b.creation ? b.creation.getTime() : MAX_TIME;\n  cmp = aTime - bTime;\n\n  if (cmp !== 0) {\n    return cmp;\n  } // break ties for the same millisecond (precision of JavaScript's clock)\n\n\n  cmp = a.creationIndex - b.creationIndex;\n  return cmp;\n} // Gives the permutation of all possible pathMatch()es of a given path. The\n// array is in longest-to-shortest order.  Handy for indexing.\n\n\nfunction permutePath(path) {\n  if (path === '/') {\n    return ['/'];\n  }\n\n  if (path.lastIndexOf('/') === path.length - 1) {\n    path = path.substr(0, path.length - 1);\n  }\n\n  var permutations = [path];\n\n  while (path.length > 1) {\n    var lindex = path.lastIndexOf('/');\n\n    if (lindex === 0) {\n      break;\n    }\n\n    path = path.substr(0, lindex);\n    permutations.push(path);\n  }\n\n  permutations.push('/');\n  return permutations;\n}\n\nfunction getCookieContext(url) {\n  if (url instanceof Object) {\n    return url;\n  } // NOTE: decodeURI will throw on malformed URIs (see GH-32).\n  // Therefore, we will just skip decoding for such URIs.\n\n\n  try {\n    url = decodeURI(url);\n  } catch (err) {// Silently swallow error\n  }\n\n  return urlParse(url);\n}\n\nfunction Cookie(options) {\n  options = options || {};\n  Object.keys(options).forEach(function (prop) {\n    if (Cookie.prototype.hasOwnProperty(prop) && Cookie.prototype[prop] !== options[prop] && prop.substr(0, 1) !== '_') {\n      this[prop] = options[prop];\n    }\n  }, this);\n  this.creation = this.creation || new Date(); // used to break creation ties in cookieCompare():\n\n  Object.defineProperty(this, 'creationIndex', {\n    configurable: false,\n    enumerable: false,\n    // important for assert.deepEqual checks\n    writable: true,\n    value: ++Cookie.cookiesCreated\n  });\n}\n\nCookie.cookiesCreated = 0; // incremented each time a cookie is created\n\nCookie.parse = parse;\nCookie.fromJSON = fromJSON;\nCookie.prototype.key = \"\";\nCookie.prototype.value = \"\"; // the order in which the RFC has them:\n\nCookie.prototype.expires = \"Infinity\"; // coerces to literal Infinity\n\nCookie.prototype.maxAge = null; // takes precedence over expires for TTL\n\nCookie.prototype.domain = null;\nCookie.prototype.path = null;\nCookie.prototype.secure = false;\nCookie.prototype.httpOnly = false;\nCookie.prototype.extensions = null; // set by the CookieJar:\n\nCookie.prototype.hostOnly = null; // boolean when set\n\nCookie.prototype.pathIsDefault = null; // boolean when set\n\nCookie.prototype.creation = null; // Date when set; defaulted by Cookie.parse\n\nCookie.prototype.lastAccessed = null; // Date when set\n\nObject.defineProperty(Cookie.prototype, 'creationIndex', {\n  configurable: true,\n  enumerable: false,\n  writable: true,\n  value: 0\n});\nCookie.serializableProperties = Object.keys(Cookie.prototype).filter(function (prop) {\n  return !(Cookie.prototype[prop] instanceof Function || prop === 'creationIndex' || prop.substr(0, 1) === '_');\n});\n\nCookie.prototype.inspect = function inspect() {\n  var now = Date.now();\n  return 'Cookie=\"' + this.toString() + '; hostOnly=' + (this.hostOnly != null ? this.hostOnly : '?') + '; aAge=' + (this.lastAccessed ? now - this.lastAccessed.getTime() + 'ms' : '?') + '; cAge=' + (this.creation ? now - this.creation.getTime() + 'ms' : '?') + '\"';\n}; // Use the new custom inspection symbol to add the custom inspect function if\n// available.\n\n\nif (util.inspect.custom) {\n  Cookie.prototype[util.inspect.custom] = Cookie.prototype.inspect;\n}\n\nCookie.prototype.toJSON = function () {\n  var obj = {};\n  var props = Cookie.serializableProperties;\n\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n\n    if (this[prop] === Cookie.prototype[prop]) {\n      continue; // leave as prototype default\n    }\n\n    if (prop === 'expires' || prop === 'creation' || prop === 'lastAccessed') {\n      if (this[prop] === null) {\n        obj[prop] = null;\n      } else {\n        obj[prop] = this[prop] == \"Infinity\" ? // intentionally not ===\n        \"Infinity\" : this[prop].toISOString();\n      }\n    } else if (prop === 'maxAge') {\n      if (this[prop] !== null) {\n        // again, intentionally not ===\n        obj[prop] = this[prop] == Infinity || this[prop] == -Infinity ? this[prop].toString() : this[prop];\n      }\n    } else {\n      if (this[prop] !== Cookie.prototype[prop]) {\n        obj[prop] = this[prop];\n      }\n    }\n  }\n\n  return obj;\n};\n\nCookie.prototype.clone = function () {\n  return fromJSON(this.toJSON());\n};\n\nCookie.prototype.validate = function validate() {\n  if (!COOKIE_OCTETS.test(this.value)) {\n    return false;\n  }\n\n  if (this.expires != Infinity && !(this.expires instanceof Date) && !parseDate(this.expires)) {\n    return false;\n  }\n\n  if (this.maxAge != null && this.maxAge <= 0) {\n    return false; // \"Max-Age=\" non-zero-digit *DIGIT\n  }\n\n  if (this.path != null && !PATH_VALUE.test(this.path)) {\n    return false;\n  }\n\n  var cdomain = this.cdomain();\n\n  if (cdomain) {\n    if (cdomain.match(/\\.$/)) {\n      return false; // S4.1.2.3 suggests that this is bad. domainMatch() tests confirm this\n    }\n\n    var suffix = pubsuffix.getPublicSuffix(cdomain);\n\n    if (suffix == null) {\n      // it's a public suffix\n      return false;\n    }\n  }\n\n  return true;\n};\n\nCookie.prototype.setExpires = function setExpires(exp) {\n  if (exp instanceof Date) {\n    this.expires = exp;\n  } else {\n    this.expires = parseDate(exp) || \"Infinity\";\n  }\n};\n\nCookie.prototype.setMaxAge = function setMaxAge(age) {\n  if (age === Infinity || age === -Infinity) {\n    this.maxAge = age.toString(); // so JSON.stringify() works\n  } else {\n    this.maxAge = age;\n  }\n}; // gives Cookie header format\n\n\nCookie.prototype.cookieString = function cookieString() {\n  var val = this.value;\n\n  if (val == null) {\n    val = '';\n  }\n\n  if (this.key === '') {\n    return val;\n  }\n\n  return this.key + '=' + val;\n}; // gives Set-Cookie header format\n\n\nCookie.prototype.toString = function toString() {\n  var str = this.cookieString();\n\n  if (this.expires != Infinity) {\n    if (this.expires instanceof Date) {\n      str += '; Expires=' + formatDate(this.expires);\n    } else {\n      str += '; Expires=' + this.expires;\n    }\n  }\n\n  if (this.maxAge != null && this.maxAge != Infinity) {\n    str += '; Max-Age=' + this.maxAge;\n  }\n\n  if (this.domain && !this.hostOnly) {\n    str += '; Domain=' + this.domain;\n  }\n\n  if (this.path) {\n    str += '; Path=' + this.path;\n  }\n\n  if (this.secure) {\n    str += '; Secure';\n  }\n\n  if (this.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (this.extensions) {\n    this.extensions.forEach(function (ext) {\n      str += '; ' + ext;\n    });\n  }\n\n  return str;\n}; // TTL() partially replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n// elsewhere)\n// S5.3 says to give the \"latest representable date\" for which we use Infinity\n// For \"expired\" we use 0\n\n\nCookie.prototype.TTL = function TTL(now) {\n  /* RFC6265 S4.1.2.2 If a cookie has both the Max-Age and the Expires\n   * attribute, the Max-Age attribute has precedence and controls the\n   * expiration date of the cookie.\n   * (Concurs with S5.3 step 3)\n   */\n  if (this.maxAge != null) {\n    return this.maxAge <= 0 ? 0 : this.maxAge * 1000;\n  }\n\n  var expires = this.expires;\n\n  if (expires != Infinity) {\n    if (!(expires instanceof Date)) {\n      expires = parseDate(expires) || Infinity;\n    }\n\n    if (expires == Infinity) {\n      return Infinity;\n    }\n\n    return expires.getTime() - (now || Date.now());\n  }\n\n  return Infinity;\n}; // expiryTime() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n// elsewhere)\n\n\nCookie.prototype.expiryTime = function expiryTime(now) {\n  if (this.maxAge != null) {\n    var relativeTo = now || this.creation || new Date();\n    var age = this.maxAge <= 0 ? -Infinity : this.maxAge * 1000;\n    return relativeTo.getTime() + age;\n  }\n\n  if (this.expires == Infinity) {\n    return Infinity;\n  }\n\n  return this.expires.getTime();\n}; // expiryDate() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n// elsewhere), except it returns a Date\n\n\nCookie.prototype.expiryDate = function expiryDate(now) {\n  var millisec = this.expiryTime(now);\n\n  if (millisec == Infinity) {\n    return new Date(MAX_TIME);\n  } else if (millisec == -Infinity) {\n    return new Date(MIN_TIME);\n  } else {\n    return new Date(millisec);\n  }\n}; // This replaces the \"persistent-flag\" parts of S5.3 step 3\n\n\nCookie.prototype.isPersistent = function isPersistent() {\n  return this.maxAge != null || this.expires != Infinity;\n}; // Mostly S5.1.2 and S5.2.3:\n\n\nCookie.prototype.cdomain = Cookie.prototype.canonicalizedDomain = function canonicalizedDomain() {\n  if (this.domain == null) {\n    return null;\n  }\n\n  return canonicalDomain(this.domain);\n};\n\nfunction CookieJar(store, options) {\n  if (typeof options === \"boolean\") {\n    options = {\n      rejectPublicSuffixes: options\n    };\n  } else if (options == null) {\n    options = {};\n  }\n\n  if (options.rejectPublicSuffixes != null) {\n    this.rejectPublicSuffixes = options.rejectPublicSuffixes;\n  }\n\n  if (options.looseMode != null) {\n    this.enableLooseMode = options.looseMode;\n  }\n\n  if (!store) {\n    store = new MemoryCookieStore();\n  }\n\n  this.store = store;\n}\n\nCookieJar.prototype.store = null;\nCookieJar.prototype.rejectPublicSuffixes = true;\nCookieJar.prototype.enableLooseMode = false;\nvar CAN_BE_SYNC = [];\nCAN_BE_SYNC.push('setCookie');\n\nCookieJar.prototype.setCookie = function (cookie, url, options, cb) {\n  var err;\n  var context = getCookieContext(url);\n\n  if (options instanceof Function) {\n    cb = options;\n    options = {};\n  }\n\n  var host = canonicalDomain(context.hostname);\n  var loose = this.enableLooseMode;\n\n  if (options.loose != null) {\n    loose = options.loose;\n  } // S5.3 step 1\n\n\n  if (!(cookie instanceof Cookie)) {\n    cookie = Cookie.parse(cookie, {\n      loose: loose\n    });\n  }\n\n  if (!cookie) {\n    err = new Error(\"Cookie failed to parse\");\n    return cb(options.ignoreError ? null : err);\n  } // S5.3 step 2\n\n\n  var now = options.now || new Date(); // will assign later to save effort in the face of errors\n  // S5.3 step 3: NOOP; persistent-flag and expiry-time is handled by getCookie()\n  // S5.3 step 4: NOOP; domain is null by default\n  // S5.3 step 5: public suffixes\n\n  if (this.rejectPublicSuffixes && cookie.domain) {\n    var suffix = pubsuffix.getPublicSuffix(cookie.cdomain());\n\n    if (suffix == null) {\n      // e.g. \"com\"\n      err = new Error(\"Cookie has domain set to a public suffix\");\n      return cb(options.ignoreError ? null : err);\n    }\n  } // S5.3 step 6:\n\n\n  if (cookie.domain) {\n    if (!domainMatch(host, cookie.cdomain(), false)) {\n      err = new Error(\"Cookie not in this host's domain. Cookie:\" + cookie.cdomain() + \" Request:\" + host);\n      return cb(options.ignoreError ? null : err);\n    }\n\n    if (cookie.hostOnly == null) {\n      // don't reset if already set\n      cookie.hostOnly = false;\n    }\n  } else {\n    cookie.hostOnly = true;\n    cookie.domain = host;\n  } //S5.2.4 If the attribute-value is empty or if the first character of the\n  //attribute-value is not %x2F (\"/\"):\n  //Let cookie-path be the default-path.\n\n\n  if (!cookie.path || cookie.path[0] !== '/') {\n    cookie.path = defaultPath(context.pathname);\n    cookie.pathIsDefault = true;\n  } // S5.3 step 8: NOOP; secure attribute\n  // S5.3 step 9: NOOP; httpOnly attribute\n  // S5.3 step 10\n\n\n  if (options.http === false && cookie.httpOnly) {\n    err = new Error(\"Cookie is HttpOnly and this isn't an HTTP API\");\n    return cb(options.ignoreError ? null : err);\n  }\n\n  var store = this.store;\n\n  if (!store.updateCookie) {\n    store.updateCookie = function (oldCookie, newCookie, cb) {\n      this.putCookie(newCookie, cb);\n    };\n  }\n\n  function withCookie(err, oldCookie) {\n    if (err) {\n      return cb(err);\n    }\n\n    var next = function (err) {\n      if (err) {\n        return cb(err);\n      } else {\n        cb(null, cookie);\n      }\n    };\n\n    if (oldCookie) {\n      // S5.3 step 11 - \"If the cookie store contains a cookie with the same name,\n      // domain, and path as the newly created cookie:\"\n      if (options.http === false && oldCookie.httpOnly) {\n        // step 11.2\n        err = new Error(\"old Cookie is HttpOnly and this isn't an HTTP API\");\n        return cb(options.ignoreError ? null : err);\n      }\n\n      cookie.creation = oldCookie.creation; // step 11.3\n\n      cookie.creationIndex = oldCookie.creationIndex; // preserve tie-breaker\n\n      cookie.lastAccessed = now; // Step 11.4 (delete cookie) is implied by just setting the new one:\n\n      store.updateCookie(oldCookie, cookie, next); // step 12\n    } else {\n      cookie.creation = cookie.lastAccessed = now;\n      store.putCookie(cookie, next); // step 12\n    }\n  }\n\n  store.findCookie(cookie.domain, cookie.path, cookie.key, withCookie);\n}; // RFC6365 S5.4\n\n\nCAN_BE_SYNC.push('getCookies');\n\nCookieJar.prototype.getCookies = function (url, options, cb) {\n  var context = getCookieContext(url);\n\n  if (options instanceof Function) {\n    cb = options;\n    options = {};\n  }\n\n  var host = canonicalDomain(context.hostname);\n  var path = context.pathname || '/';\n  var secure = options.secure;\n\n  if (secure == null && context.protocol && (context.protocol == 'https:' || context.protocol == 'wss:')) {\n    secure = true;\n  }\n\n  var http = options.http;\n\n  if (http == null) {\n    http = true;\n  }\n\n  var now = options.now || Date.now();\n  var expireCheck = options.expire !== false;\n  var allPaths = !!options.allPaths;\n  var store = this.store;\n\n  function matchingCookie(c) {\n    // \"Either:\n    //   The cookie's host-only-flag is true and the canonicalized\n    //   request-host is identical to the cookie's domain.\n    // Or:\n    //   The cookie's host-only-flag is false and the canonicalized\n    //   request-host domain-matches the cookie's domain.\"\n    if (c.hostOnly) {\n      if (c.domain != host) {\n        return false;\n      }\n    } else {\n      if (!domainMatch(host, c.domain, false)) {\n        return false;\n      }\n    } // \"The request-uri's path path-matches the cookie's path.\"\n\n\n    if (!allPaths && !pathMatch(path, c.path)) {\n      return false;\n    } // \"If the cookie's secure-only-flag is true, then the request-uri's\n    // scheme must denote a \"secure\" protocol\"\n\n\n    if (c.secure && !secure) {\n      return false;\n    } // \"If the cookie's http-only-flag is true, then exclude the cookie if the\n    // cookie-string is being generated for a \"non-HTTP\" API\"\n\n\n    if (c.httpOnly && !http) {\n      return false;\n    } // deferred from S5.3\n    // non-RFC: allow retention of expired cookies by choice\n\n\n    if (expireCheck && c.expiryTime() <= now) {\n      store.removeCookie(c.domain, c.path, c.key, function () {}); // result ignored\n\n      return false;\n    }\n\n    return true;\n  }\n\n  store.findCookies(host, allPaths ? null : path, function (err, cookies) {\n    if (err) {\n      return cb(err);\n    }\n\n    cookies = cookies.filter(matchingCookie); // sorting of S5.4 part 2\n\n    if (options.sort !== false) {\n      cookies = cookies.sort(cookieCompare);\n    } // S5.4 part 3\n\n\n    var now = new Date();\n    cookies.forEach(function (c) {\n      c.lastAccessed = now;\n    }); // TODO persist lastAccessed\n\n    cb(null, cookies);\n  });\n};\n\nCAN_BE_SYNC.push('getCookieString');\n\nCookieJar.prototype.getCookieString = function\n  /*..., cb*/\n() {\n  var args = Array.prototype.slice.call(arguments, 0);\n  var cb = args.pop();\n\n  var next = function (err, cookies) {\n    if (err) {\n      cb(err);\n    } else {\n      cb(null, cookies.sort(cookieCompare).map(function (c) {\n        return c.cookieString();\n      }).join('; '));\n    }\n  };\n\n  args.push(next);\n  this.getCookies.apply(this, args);\n};\n\nCAN_BE_SYNC.push('getSetCookieStrings');\n\nCookieJar.prototype.getSetCookieStrings = function\n  /*..., cb*/\n() {\n  var args = Array.prototype.slice.call(arguments, 0);\n  var cb = args.pop();\n\n  var next = function (err, cookies) {\n    if (err) {\n      cb(err);\n    } else {\n      cb(null, cookies.map(function (c) {\n        return c.toString();\n      }));\n    }\n  };\n\n  args.push(next);\n  this.getCookies.apply(this, args);\n};\n\nCAN_BE_SYNC.push('serialize');\n\nCookieJar.prototype.serialize = function (cb) {\n  var type = this.store.constructor.name;\n\n  if (type === 'Object') {\n    type = null;\n  } // update README.md \"Serialization Format\" if you change this, please!\n\n\n  var serialized = {\n    // The version of tough-cookie that serialized this jar. Generally a good\n    // practice since future versions can make data import decisions based on\n    // known past behavior. When/if this matters, use `semver`.\n    version: 'tough-cookie@' + VERSION,\n    // add the store type, to make humans happy:\n    storeType: type,\n    // CookieJar configuration:\n    rejectPublicSuffixes: !!this.rejectPublicSuffixes,\n    // this gets filled from getAllCookies:\n    cookies: []\n  };\n\n  if (!(this.store.getAllCookies && typeof this.store.getAllCookies === 'function')) {\n    return cb(new Error('store does not support getAllCookies and cannot be serialized'));\n  }\n\n  this.store.getAllCookies(function (err, cookies) {\n    if (err) {\n      return cb(err);\n    }\n\n    serialized.cookies = cookies.map(function (cookie) {\n      // convert to serialized 'raw' cookies\n      cookie = cookie instanceof Cookie ? cookie.toJSON() : cookie; // Remove the index so new ones get assigned during deserialization\n\n      delete cookie.creationIndex;\n      return cookie;\n    });\n    return cb(null, serialized);\n  });\n}; // well-known name that JSON.stringify calls\n\n\nCookieJar.prototype.toJSON = function () {\n  return this.serializeSync();\n}; // use the class method CookieJar.deserialize instead of calling this directly\n\n\nCAN_BE_SYNC.push('_importCookies');\n\nCookieJar.prototype._importCookies = function (serialized, cb) {\n  var jar = this;\n  var cookies = serialized.cookies;\n\n  if (!cookies || !Array.isArray(cookies)) {\n    return cb(new Error('serialized jar has no cookies array'));\n  }\n\n  cookies = cookies.slice(); // do not modify the original\n\n  function putNext(err) {\n    if (err) {\n      return cb(err);\n    }\n\n    if (!cookies.length) {\n      return cb(err, jar);\n    }\n\n    var cookie;\n\n    try {\n      cookie = fromJSON(cookies.shift());\n    } catch (e) {\n      return cb(e);\n    }\n\n    if (cookie === null) {\n      return putNext(null); // skip this cookie\n    }\n\n    jar.store.putCookie(cookie, putNext);\n  }\n\n  putNext();\n};\n\nCookieJar.deserialize = function (strOrObj, store, cb) {\n  if (arguments.length !== 3) {\n    // store is optional\n    cb = store;\n    store = null;\n  }\n\n  var serialized;\n\n  if (typeof strOrObj === 'string') {\n    serialized = jsonParse(strOrObj);\n\n    if (serialized instanceof Error) {\n      return cb(serialized);\n    }\n  } else {\n    serialized = strOrObj;\n  }\n\n  var jar = new CookieJar(store, serialized.rejectPublicSuffixes);\n\n  jar._importCookies(serialized, function (err) {\n    if (err) {\n      return cb(err);\n    }\n\n    cb(null, jar);\n  });\n};\n\nCookieJar.deserializeSync = function (strOrObj, store) {\n  var serialized = typeof strOrObj === 'string' ? JSON.parse(strOrObj) : strOrObj;\n  var jar = new CookieJar(store, serialized.rejectPublicSuffixes); // catch this mistake early:\n\n  if (!jar.store.synchronous) {\n    throw new Error('CookieJar store is not synchronous; use async API instead.');\n  }\n\n  jar._importCookiesSync(serialized);\n\n  return jar;\n};\n\nCookieJar.fromJSON = CookieJar.deserializeSync;\n\nCookieJar.prototype.clone = function (newStore, cb) {\n  if (arguments.length === 1) {\n    cb = newStore;\n    newStore = null;\n  }\n\n  this.serialize(function (err, serialized) {\n    if (err) {\n      return cb(err);\n    }\n\n    CookieJar.deserialize(serialized, newStore, cb);\n  });\n};\n\nCAN_BE_SYNC.push('removeAllCookies');\n\nCookieJar.prototype.removeAllCookies = function (cb) {\n  var store = this.store; // Check that the store implements its own removeAllCookies(). The default\n  // implementation in Store will immediately call the callback with a \"not\n  // implemented\" Error.\n\n  if (store.removeAllCookies instanceof Function && store.removeAllCookies !== Store.prototype.removeAllCookies) {\n    return store.removeAllCookies(cb);\n  }\n\n  store.getAllCookies(function (err, cookies) {\n    if (err) {\n      return cb(err);\n    }\n\n    if (cookies.length === 0) {\n      return cb(null);\n    }\n\n    var completedCount = 0;\n    var removeErrors = [];\n\n    function removeCookieCb(removeErr) {\n      if (removeErr) {\n        removeErrors.push(removeErr);\n      }\n\n      completedCount++;\n\n      if (completedCount === cookies.length) {\n        return cb(removeErrors.length ? removeErrors[0] : null);\n      }\n    }\n\n    cookies.forEach(function (cookie) {\n      store.removeCookie(cookie.domain, cookie.path, cookie.key, removeCookieCb);\n    });\n  });\n};\n\nCookieJar.prototype._cloneSync = syncWrap('clone');\n\nCookieJar.prototype.cloneSync = function (newStore) {\n  if (!newStore.synchronous) {\n    throw new Error('CookieJar clone destination store is not synchronous; use async API instead.');\n  }\n\n  return this._cloneSync(newStore);\n}; // Use a closure to provide a true imperative API for synchronous stores.\n\n\nfunction syncWrap(method) {\n  return function () {\n    if (!this.store.synchronous) {\n      throw new Error('CookieJar store is not synchronous; use async API instead.');\n    }\n\n    var args = Array.prototype.slice.call(arguments);\n    var syncErr, syncResult;\n    args.push(function syncCb(err, result) {\n      syncErr = err;\n      syncResult = result;\n    });\n    this[method].apply(this, args);\n\n    if (syncErr) {\n      throw syncErr;\n    }\n\n    return syncResult;\n  };\n} // wrap all declared CAN_BE_SYNC methods in the sync wrapper\n\n\nCAN_BE_SYNC.forEach(function (method) {\n  CookieJar.prototype[method + 'Sync'] = syncWrap(method);\n});\nexports.version = VERSION;\nexports.CookieJar = CookieJar;\nexports.Cookie = Cookie;\nexports.Store = Store;\nexports.MemoryCookieStore = MemoryCookieStore;\nexports.parseDate = parseDate;\nexports.formatDate = formatDate;\nexports.parse = parse;\nexports.fromJSON = fromJSON;\nexports.domainMatch = domainMatch;\nexports.defaultPath = defaultPath;\nexports.pathMatch = pathMatch;\nexports.getPublicSuffix = pubsuffix.getPublicSuffix;\nexports.cookieCompare = cookieCompare;\nexports.permuteDomain = require('./permuteDomain').permuteDomain;\nexports.permutePath = permutePath;\nexports.canonicalDomain = canonicalDomain;","map":{"version":3,"names":["net","require","urlParse","parse","util","pubsuffix","Store","MemoryCookieStore","pathMatch","VERSION","punycode","e","console","warn","COOKIE_OCTETS","CONTROL_CHARS","TERMINATORS","PATH_VALUE","DATE_DELIM","MONTH_TO_NUM","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","NUM_TO_MONTH","NUM_TO_DAY","MAX_TIME","MIN_TIME","parseDigits","token","minDigits","maxDigits","trailingOK","count","length","c","charCodeAt","parseInt","substr","parseTime","parts","split","result","i","num","parseMonth","String","toLowerCase","parseDate","str","tokens","hour","minute","second","dayOfMonth","month","year","trim","Date","UTC","formatDate","date","d","getUTCDate","h","getUTCHours","m","getUTCMinutes","s","getUTCSeconds","getUTCDay","getUTCMonth","getUTCFullYear","canonicalDomain","replace","test","toASCII","domainMatch","domStr","canonicalize","isIP","idx","indexOf","defaultPath","path","rightSlash","lastIndexOf","slice","trimTerminator","t","terminatorIdx","parseCookiePair","cookiePair","looseMode","firstEq","cookieName","cookieValue","Cookie","key","value","options","firstSemi","loose","unparsed","cookie_avs","av","shift","av_sep","av_key","av_value","exp","expires","delta","setMaxAge","domain","secure","httpOnly","extensions","push","jsonParse","obj","JSON","fromJSON","Error","serializableProperties","prop","undefined","prototype","cookieCompare","a","b","cmp","aPathLen","bPathLen","aTime","creation","getTime","bTime","creationIndex","permutePath","permutations","lindex","getCookieContext","url","Object","decodeURI","err","keys","forEach","hasOwnProperty","defineProperty","configurable","enumerable","writable","cookiesCreated","maxAge","hostOnly","pathIsDefault","lastAccessed","filter","Function","inspect","now","toString","custom","toJSON","props","toISOString","Infinity","clone","validate","cdomain","match","suffix","getPublicSuffix","setExpires","age","cookieString","val","ext","TTL","expiryTime","relativeTo","expiryDate","millisec","isPersistent","canonicalizedDomain","CookieJar","store","rejectPublicSuffixes","enableLooseMode","CAN_BE_SYNC","setCookie","cookie","cb","context","host","hostname","ignoreError","pathname","http","updateCookie","oldCookie","newCookie","putCookie","withCookie","next","findCookie","getCookies","protocol","expireCheck","expire","allPaths","matchingCookie","removeCookie","findCookies","cookies","sort","getCookieString","args","Array","call","arguments","pop","map","join","apply","getSetCookieStrings","serialize","type","constructor","name","serialized","version","storeType","getAllCookies","serializeSync","_importCookies","jar","isArray","putNext","deserialize","strOrObj","deserializeSync","synchronous","_importCookiesSync","newStore","removeAllCookies","completedCount","removeErrors","removeCookieCb","removeErr","_cloneSync","syncWrap","cloneSync","method","syncErr","syncResult","syncCb","exports","permuteDomain"],"sources":["D:/siit/Y4S1/senior_project/web_practice1/my-app/node_modules/request/node_modules/tough-cookie/lib/cookie.js"],"sourcesContent":["/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\nvar net = require('net');\nvar urlParse = require('url').parse;\nvar util = require('util');\nvar pubsuffix = require('./pubsuffix-psl');\nvar Store = require('./store').Store;\nvar MemoryCookieStore = require('./memstore').MemoryCookieStore;\nvar pathMatch = require('./pathMatch').pathMatch;\nvar VERSION = require('./version');\n\nvar punycode;\ntry {\n  punycode = require('punycode');\n} catch(e) {\n  console.warn(\"tough-cookie: can't load punycode; won't use punycode for domain normalization\");\n}\n\n// From RFC6265 S4.1.1\n// note that it excludes \\x3B \";\"\nvar COOKIE_OCTETS = /^[\\x21\\x23-\\x2B\\x2D-\\x3A\\x3C-\\x5B\\x5D-\\x7E]+$/;\n\nvar CONTROL_CHARS = /[\\x00-\\x1F]/;\n\n// From Chromium // '\\r', '\\n' and '\\0' should be treated as a terminator in\n// the \"relaxed\" mode, see:\n// https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/parsed_cookie.cc#L60\nvar TERMINATORS = ['\\n', '\\r', '\\0'];\n\n// RFC6265 S4.1.1 defines path value as 'any CHAR except CTLs or \";\"'\n// Note ';' is \\x3B\nvar PATH_VALUE = /[\\x20-\\x3A\\x3C-\\x7E]+/;\n\n// date-time parsing constants (RFC6265 S5.1.1)\n\nvar DATE_DELIM = /[\\x09\\x20-\\x2F\\x3B-\\x40\\x5B-\\x60\\x7B-\\x7E]/;\n\nvar MONTH_TO_NUM = {\n  jan:0, feb:1, mar:2, apr:3, may:4, jun:5,\n  jul:6, aug:7, sep:8, oct:9, nov:10, dec:11\n};\nvar NUM_TO_MONTH = [\n  'Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'\n];\nvar NUM_TO_DAY = [\n  'Sun','Mon','Tue','Wed','Thu','Fri','Sat'\n];\n\nvar MAX_TIME = 2147483647000; // 31-bit max\nvar MIN_TIME = 0; // 31-bit min\n\n/*\n * Parses a Natural number (i.e., non-negative integer) with either the\n *    <min>*<max>DIGIT ( non-digit *OCTET )\n * or\n *    <min>*<max>DIGIT\n * grammar (RFC6265 S5.1.1).\n *\n * The \"trailingOK\" boolean controls if the grammar accepts a\n * \"( non-digit *OCTET )\" trailer.\n */\nfunction parseDigits(token, minDigits, maxDigits, trailingOK) {\n  var count = 0;\n  while (count < token.length) {\n    var c = token.charCodeAt(count);\n    // \"non-digit = %x00-2F / %x3A-FF\"\n    if (c <= 0x2F || c >= 0x3A) {\n      break;\n    }\n    count++;\n  }\n\n  // constrain to a minimum and maximum number of digits.\n  if (count < minDigits || count > maxDigits) {\n    return null;\n  }\n\n  if (!trailingOK && count != token.length) {\n    return null;\n  }\n\n  return parseInt(token.substr(0,count), 10);\n}\n\nfunction parseTime(token) {\n  var parts = token.split(':');\n  var result = [0,0,0];\n\n  /* RF6256 S5.1.1:\n   *      time            = hms-time ( non-digit *OCTET )\n   *      hms-time        = time-field \":\" time-field \":\" time-field\n   *      time-field      = 1*2DIGIT\n   */\n\n  if (parts.length !== 3) {\n    return null;\n  }\n\n  for (var i = 0; i < 3; i++) {\n    // \"time-field\" must be strictly \"1*2DIGIT\", HOWEVER, \"hms-time\" can be\n    // followed by \"( non-digit *OCTET )\" so therefore the last time-field can\n    // have a trailer\n    var trailingOK = (i == 2);\n    var num = parseDigits(parts[i], 1, 2, trailingOK);\n    if (num === null) {\n      return null;\n    }\n    result[i] = num;\n  }\n\n  return result;\n}\n\nfunction parseMonth(token) {\n  token = String(token).substr(0,3).toLowerCase();\n  var num = MONTH_TO_NUM[token];\n  return num >= 0 ? num : null;\n}\n\n/*\n * RFC6265 S5.1.1 date parser (see RFC for full grammar)\n */\nfunction parseDate(str) {\n  if (!str) {\n    return;\n  }\n\n  /* RFC6265 S5.1.1:\n   * 2. Process each date-token sequentially in the order the date-tokens\n   * appear in the cookie-date\n   */\n  var tokens = str.split(DATE_DELIM);\n  if (!tokens) {\n    return;\n  }\n\n  var hour = null;\n  var minute = null;\n  var second = null;\n  var dayOfMonth = null;\n  var month = null;\n  var year = null;\n\n  for (var i=0; i<tokens.length; i++) {\n    var token = tokens[i].trim();\n    if (!token.length) {\n      continue;\n    }\n\n    var result;\n\n    /* 2.1. If the found-time flag is not set and the token matches the time\n     * production, set the found-time flag and set the hour- value,\n     * minute-value, and second-value to the numbers denoted by the digits in\n     * the date-token, respectively.  Skip the remaining sub-steps and continue\n     * to the next date-token.\n     */\n    if (second === null) {\n      result = parseTime(token);\n      if (result) {\n        hour = result[0];\n        minute = result[1];\n        second = result[2];\n        continue;\n      }\n    }\n\n    /* 2.2. If the found-day-of-month flag is not set and the date-token matches\n     * the day-of-month production, set the found-day-of- month flag and set\n     * the day-of-month-value to the number denoted by the date-token.  Skip\n     * the remaining sub-steps and continue to the next date-token.\n     */\n    if (dayOfMonth === null) {\n      // \"day-of-month = 1*2DIGIT ( non-digit *OCTET )\"\n      result = parseDigits(token, 1, 2, true);\n      if (result !== null) {\n        dayOfMonth = result;\n        continue;\n      }\n    }\n\n    /* 2.3. If the found-month flag is not set and the date-token matches the\n     * month production, set the found-month flag and set the month-value to\n     * the month denoted by the date-token.  Skip the remaining sub-steps and\n     * continue to the next date-token.\n     */\n    if (month === null) {\n      result = parseMonth(token);\n      if (result !== null) {\n        month = result;\n        continue;\n      }\n    }\n\n    /* 2.4. If the found-year flag is not set and the date-token matches the\n     * year production, set the found-year flag and set the year-value to the\n     * number denoted by the date-token.  Skip the remaining sub-steps and\n     * continue to the next date-token.\n     */\n    if (year === null) {\n      // \"year = 2*4DIGIT ( non-digit *OCTET )\"\n      result = parseDigits(token, 2, 4, true);\n      if (result !== null) {\n        year = result;\n        /* From S5.1.1:\n         * 3.  If the year-value is greater than or equal to 70 and less\n         * than or equal to 99, increment the year-value by 1900.\n         * 4.  If the year-value is greater than or equal to 0 and less\n         * than or equal to 69, increment the year-value by 2000.\n         */\n        if (year >= 70 && year <= 99) {\n          year += 1900;\n        } else if (year >= 0 && year <= 69) {\n          year += 2000;\n        }\n      }\n    }\n  }\n\n  /* RFC 6265 S5.1.1\n   * \"5. Abort these steps and fail to parse the cookie-date if:\n   *     *  at least one of the found-day-of-month, found-month, found-\n   *        year, or found-time flags is not set,\n   *     *  the day-of-month-value is less than 1 or greater than 31,\n   *     *  the year-value is less than 1601,\n   *     *  the hour-value is greater than 23,\n   *     *  the minute-value is greater than 59, or\n   *     *  the second-value is greater than 59.\n   *     (Note that leap seconds cannot be represented in this syntax.)\"\n   *\n   * So, in order as above:\n   */\n  if (\n    dayOfMonth === null || month === null || year === null || second === null ||\n    dayOfMonth < 1 || dayOfMonth > 31 ||\n    year < 1601 ||\n    hour > 23 ||\n    minute > 59 ||\n    second > 59\n  ) {\n    return;\n  }\n\n  return new Date(Date.UTC(year, month, dayOfMonth, hour, minute, second));\n}\n\nfunction formatDate(date) {\n  var d = date.getUTCDate(); d = d >= 10 ? d : '0'+d;\n  var h = date.getUTCHours(); h = h >= 10 ? h : '0'+h;\n  var m = date.getUTCMinutes(); m = m >= 10 ? m : '0'+m;\n  var s = date.getUTCSeconds(); s = s >= 10 ? s : '0'+s;\n  return NUM_TO_DAY[date.getUTCDay()] + ', ' +\n    d+' '+ NUM_TO_MONTH[date.getUTCMonth()] +' '+ date.getUTCFullYear() +' '+\n    h+':'+m+':'+s+' GMT';\n}\n\n// S5.1.2 Canonicalized Host Names\nfunction canonicalDomain(str) {\n  if (str == null) {\n    return null;\n  }\n  str = str.trim().replace(/^\\./,''); // S4.1.2.3 & S5.2.3: ignore leading .\n\n  // convert to IDN if any non-ASCII characters\n  if (punycode && /[^\\u0001-\\u007f]/.test(str)) {\n    str = punycode.toASCII(str);\n  }\n\n  return str.toLowerCase();\n}\n\n// S5.1.3 Domain Matching\nfunction domainMatch(str, domStr, canonicalize) {\n  if (str == null || domStr == null) {\n    return null;\n  }\n  if (canonicalize !== false) {\n    str = canonicalDomain(str);\n    domStr = canonicalDomain(domStr);\n  }\n\n  /*\n   * \"The domain string and the string are identical. (Note that both the\n   * domain string and the string will have been canonicalized to lower case at\n   * this point)\"\n   */\n  if (str == domStr) {\n    return true;\n  }\n\n  /* \"All of the following [three] conditions hold:\" (order adjusted from the RFC) */\n\n  /* \"* The string is a host name (i.e., not an IP address).\" */\n  if (net.isIP(str)) {\n    return false;\n  }\n\n  /* \"* The domain string is a suffix of the string\" */\n  var idx = str.indexOf(domStr);\n  if (idx <= 0) {\n    return false; // it's a non-match (-1) or prefix (0)\n  }\n\n  // e.g \"a.b.c\".indexOf(\"b.c\") === 2\n  // 5 === 3+2\n  if (str.length !== domStr.length + idx) { // it's not a suffix\n    return false;\n  }\n\n  /* \"* The last character of the string that is not included in the domain\n  * string is a %x2E (\".\") character.\" */\n  if (str.substr(idx-1,1) !== '.') {\n    return false;\n  }\n\n  return true;\n}\n\n\n// RFC6265 S5.1.4 Paths and Path-Match\n\n/*\n * \"The user agent MUST use an algorithm equivalent to the following algorithm\n * to compute the default-path of a cookie:\"\n *\n * Assumption: the path (and not query part or absolute uri) is passed in.\n */\nfunction defaultPath(path) {\n  // \"2. If the uri-path is empty or if the first character of the uri-path is not\n  // a %x2F (\"/\") character, output %x2F (\"/\") and skip the remaining steps.\n  if (!path || path.substr(0,1) !== \"/\") {\n    return \"/\";\n  }\n\n  // \"3. If the uri-path contains no more than one %x2F (\"/\") character, output\n  // %x2F (\"/\") and skip the remaining step.\"\n  if (path === \"/\") {\n    return path;\n  }\n\n  var rightSlash = path.lastIndexOf(\"/\");\n  if (rightSlash === 0) {\n    return \"/\";\n  }\n\n  // \"4. Output the characters of the uri-path from the first character up to,\n  // but not including, the right-most %x2F (\"/\").\"\n  return path.slice(0, rightSlash);\n}\n\nfunction trimTerminator(str) {\n  for (var t = 0; t < TERMINATORS.length; t++) {\n    var terminatorIdx = str.indexOf(TERMINATORS[t]);\n    if (terminatorIdx !== -1) {\n      str = str.substr(0,terminatorIdx);\n    }\n  }\n\n  return str;\n}\n\nfunction parseCookiePair(cookiePair, looseMode) {\n  cookiePair = trimTerminator(cookiePair);\n\n  var firstEq = cookiePair.indexOf('=');\n  if (looseMode) {\n    if (firstEq === 0) { // '=' is immediately at start\n      cookiePair = cookiePair.substr(1);\n      firstEq = cookiePair.indexOf('='); // might still need to split on '='\n    }\n  } else { // non-loose mode\n    if (firstEq <= 0) { // no '=' or is at start\n      return; // needs to have non-empty \"cookie-name\"\n    }\n  }\n\n  var cookieName, cookieValue;\n  if (firstEq <= 0) {\n    cookieName = \"\";\n    cookieValue = cookiePair.trim();\n  } else {\n    cookieName = cookiePair.substr(0, firstEq).trim();\n    cookieValue = cookiePair.substr(firstEq+1).trim();\n  }\n\n  if (CONTROL_CHARS.test(cookieName) || CONTROL_CHARS.test(cookieValue)) {\n    return;\n  }\n\n  var c = new Cookie();\n  c.key = cookieName;\n  c.value = cookieValue;\n  return c;\n}\n\nfunction parse(str, options) {\n  if (!options || typeof options !== 'object') {\n    options = {};\n  }\n  str = str.trim();\n\n  // We use a regex to parse the \"name-value-pair\" part of S5.2\n  var firstSemi = str.indexOf(';'); // S5.2 step 1\n  var cookiePair = (firstSemi === -1) ? str : str.substr(0, firstSemi);\n  var c = parseCookiePair(cookiePair, !!options.loose);\n  if (!c) {\n    return;\n  }\n\n  if (firstSemi === -1) {\n    return c;\n  }\n\n  // S5.2.3 \"unparsed-attributes consist of the remainder of the set-cookie-string\n  // (including the %x3B (\";\") in question).\" plus later on in the same section\n  // \"discard the first \";\" and trim\".\n  var unparsed = str.slice(firstSemi + 1).trim();\n\n  // \"If the unparsed-attributes string is empty, skip the rest of these\n  // steps.\"\n  if (unparsed.length === 0) {\n    return c;\n  }\n\n  /*\n   * S5.2 says that when looping over the items \"[p]rocess the attribute-name\n   * and attribute-value according to the requirements in the following\n   * subsections\" for every item.  Plus, for many of the individual attributes\n   * in S5.3 it says to use the \"attribute-value of the last attribute in the\n   * cookie-attribute-list\".  Therefore, in this implementation, we overwrite\n   * the previous value.\n   */\n  var cookie_avs = unparsed.split(';');\n  while (cookie_avs.length) {\n    var av = cookie_avs.shift().trim();\n    if (av.length === 0) { // happens if \";;\" appears\n      continue;\n    }\n    var av_sep = av.indexOf('=');\n    var av_key, av_value;\n\n    if (av_sep === -1) {\n      av_key = av;\n      av_value = null;\n    } else {\n      av_key = av.substr(0,av_sep);\n      av_value = av.substr(av_sep+1);\n    }\n\n    av_key = av_key.trim().toLowerCase();\n\n    if (av_value) {\n      av_value = av_value.trim();\n    }\n\n    switch(av_key) {\n    case 'expires': // S5.2.1\n      if (av_value) {\n        var exp = parseDate(av_value);\n        // \"If the attribute-value failed to parse as a cookie date, ignore the\n        // cookie-av.\"\n        if (exp) {\n          // over and underflow not realistically a concern: V8's getTime() seems to\n          // store something larger than a 32-bit time_t (even with 32-bit node)\n          c.expires = exp;\n        }\n      }\n      break;\n\n    case 'max-age': // S5.2.2\n      if (av_value) {\n        // \"If the first character of the attribute-value is not a DIGIT or a \"-\"\n        // character ...[or]... If the remainder of attribute-value contains a\n        // non-DIGIT character, ignore the cookie-av.\"\n        if (/^-?[0-9]+$/.test(av_value)) {\n          var delta = parseInt(av_value, 10);\n          // \"If delta-seconds is less than or equal to zero (0), let expiry-time\n          // be the earliest representable date and time.\"\n          c.setMaxAge(delta);\n        }\n      }\n      break;\n\n    case 'domain': // S5.2.3\n      // \"If the attribute-value is empty, the behavior is undefined.  However,\n      // the user agent SHOULD ignore the cookie-av entirely.\"\n      if (av_value) {\n        // S5.2.3 \"Let cookie-domain be the attribute-value without the leading %x2E\n        // (\".\") character.\"\n        var domain = av_value.trim().replace(/^\\./, '');\n        if (domain) {\n          // \"Convert the cookie-domain to lower case.\"\n          c.domain = domain.toLowerCase();\n        }\n      }\n      break;\n\n    case 'path': // S5.2.4\n      /*\n       * \"If the attribute-value is empty or if the first character of the\n       * attribute-value is not %x2F (\"/\"):\n       *   Let cookie-path be the default-path.\n       * Otherwise:\n       *   Let cookie-path be the attribute-value.\"\n       *\n       * We'll represent the default-path as null since it depends on the\n       * context of the parsing.\n       */\n      c.path = av_value && av_value[0] === \"/\" ? av_value : null;\n      break;\n\n    case 'secure': // S5.2.5\n      /*\n       * \"If the attribute-name case-insensitively matches the string \"Secure\",\n       * the user agent MUST append an attribute to the cookie-attribute-list\n       * with an attribute-name of Secure and an empty attribute-value.\"\n       */\n      c.secure = true;\n      break;\n\n    case 'httponly': // S5.2.6 -- effectively the same as 'secure'\n      c.httpOnly = true;\n      break;\n\n    default:\n      c.extensions = c.extensions || [];\n      c.extensions.push(av);\n      break;\n    }\n  }\n\n  return c;\n}\n\n// avoid the V8 deoptimization monster!\nfunction jsonParse(str) {\n  var obj;\n  try {\n    obj = JSON.parse(str);\n  } catch (e) {\n    return e;\n  }\n  return obj;\n}\n\nfunction fromJSON(str) {\n  if (!str) {\n    return null;\n  }\n\n  var obj;\n  if (typeof str === 'string') {\n    obj = jsonParse(str);\n    if (obj instanceof Error) {\n      return null;\n    }\n  } else {\n    // assume it's an Object\n    obj = str;\n  }\n\n  var c = new Cookie();\n  for (var i=0; i<Cookie.serializableProperties.length; i++) {\n    var prop = Cookie.serializableProperties[i];\n    if (obj[prop] === undefined ||\n        obj[prop] === Cookie.prototype[prop])\n    {\n      continue; // leave as prototype default\n    }\n\n    if (prop === 'expires' ||\n        prop === 'creation' ||\n        prop === 'lastAccessed')\n    {\n      if (obj[prop] === null) {\n        c[prop] = null;\n      } else {\n        c[prop] = obj[prop] == \"Infinity\" ?\n          \"Infinity\" : new Date(obj[prop]);\n      }\n    } else {\n      c[prop] = obj[prop];\n    }\n  }\n\n  return c;\n}\n\n/* Section 5.4 part 2:\n * \"*  Cookies with longer paths are listed before cookies with\n *     shorter paths.\n *\n *  *  Among cookies that have equal-length path fields, cookies with\n *     earlier creation-times are listed before cookies with later\n *     creation-times.\"\n */\n\nfunction cookieCompare(a,b) {\n  var cmp = 0;\n\n  // descending for length: b CMP a\n  var aPathLen = a.path ? a.path.length : 0;\n  var bPathLen = b.path ? b.path.length : 0;\n  cmp = bPathLen - aPathLen;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  // ascending for time: a CMP b\n  var aTime = a.creation ? a.creation.getTime() : MAX_TIME;\n  var bTime = b.creation ? b.creation.getTime() : MAX_TIME;\n  cmp = aTime - bTime;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  // break ties for the same millisecond (precision of JavaScript's clock)\n  cmp = a.creationIndex - b.creationIndex;\n\n  return cmp;\n}\n\n// Gives the permutation of all possible pathMatch()es of a given path. The\n// array is in longest-to-shortest order.  Handy for indexing.\nfunction permutePath(path) {\n  if (path === '/') {\n    return ['/'];\n  }\n  if (path.lastIndexOf('/') === path.length-1) {\n    path = path.substr(0,path.length-1);\n  }\n  var permutations = [path];\n  while (path.length > 1) {\n    var lindex = path.lastIndexOf('/');\n    if (lindex === 0) {\n      break;\n    }\n    path = path.substr(0,lindex);\n    permutations.push(path);\n  }\n  permutations.push('/');\n  return permutations;\n}\n\nfunction getCookieContext(url) {\n  if (url instanceof Object) {\n    return url;\n  }\n  // NOTE: decodeURI will throw on malformed URIs (see GH-32).\n  // Therefore, we will just skip decoding for such URIs.\n  try {\n    url = decodeURI(url);\n  }\n  catch(err) {\n    // Silently swallow error\n  }\n\n  return urlParse(url);\n}\n\nfunction Cookie(options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function(prop) {\n    if (Cookie.prototype.hasOwnProperty(prop) &&\n        Cookie.prototype[prop] !== options[prop] &&\n        prop.substr(0,1) !== '_')\n    {\n      this[prop] = options[prop];\n    }\n  }, this);\n\n  this.creation = this.creation || new Date();\n\n  // used to break creation ties in cookieCompare():\n  Object.defineProperty(this, 'creationIndex', {\n    configurable: false,\n    enumerable: false, // important for assert.deepEqual checks\n    writable: true,\n    value: ++Cookie.cookiesCreated\n  });\n}\n\nCookie.cookiesCreated = 0; // incremented each time a cookie is created\n\nCookie.parse = parse;\nCookie.fromJSON = fromJSON;\n\nCookie.prototype.key = \"\";\nCookie.prototype.value = \"\";\n\n// the order in which the RFC has them:\nCookie.prototype.expires = \"Infinity\"; // coerces to literal Infinity\nCookie.prototype.maxAge = null; // takes precedence over expires for TTL\nCookie.prototype.domain = null;\nCookie.prototype.path = null;\nCookie.prototype.secure = false;\nCookie.prototype.httpOnly = false;\nCookie.prototype.extensions = null;\n\n// set by the CookieJar:\nCookie.prototype.hostOnly = null; // boolean when set\nCookie.prototype.pathIsDefault = null; // boolean when set\nCookie.prototype.creation = null; // Date when set; defaulted by Cookie.parse\nCookie.prototype.lastAccessed = null; // Date when set\nObject.defineProperty(Cookie.prototype, 'creationIndex', {\n  configurable: true,\n  enumerable: false,\n  writable: true,\n  value: 0\n});\n\nCookie.serializableProperties = Object.keys(Cookie.prototype)\n  .filter(function(prop) {\n    return !(\n      Cookie.prototype[prop] instanceof Function ||\n      prop === 'creationIndex' ||\n      prop.substr(0,1) === '_'\n    );\n  });\n\nCookie.prototype.inspect = function inspect() {\n  var now = Date.now();\n  return 'Cookie=\"'+this.toString() +\n    '; hostOnly='+(this.hostOnly != null ? this.hostOnly : '?') +\n    '; aAge='+(this.lastAccessed ? (now-this.lastAccessed.getTime())+'ms' : '?') +\n    '; cAge='+(this.creation ? (now-this.creation.getTime())+'ms' : '?') +\n    '\"';\n};\n\n// Use the new custom inspection symbol to add the custom inspect function if\n// available.\nif (util.inspect.custom) {\n  Cookie.prototype[util.inspect.custom] = Cookie.prototype.inspect;\n}\n\nCookie.prototype.toJSON = function() {\n  var obj = {};\n\n  var props = Cookie.serializableProperties;\n  for (var i=0; i<props.length; i++) {\n    var prop = props[i];\n    if (this[prop] === Cookie.prototype[prop]) {\n      continue; // leave as prototype default\n    }\n\n    if (prop === 'expires' ||\n        prop === 'creation' ||\n        prop === 'lastAccessed')\n    {\n      if (this[prop] === null) {\n        obj[prop] = null;\n      } else {\n        obj[prop] = this[prop] == \"Infinity\" ? // intentionally not ===\n          \"Infinity\" : this[prop].toISOString();\n      }\n    } else if (prop === 'maxAge') {\n      if (this[prop] !== null) {\n        // again, intentionally not ===\n        obj[prop] = (this[prop] == Infinity || this[prop] == -Infinity) ?\n          this[prop].toString() : this[prop];\n      }\n    } else {\n      if (this[prop] !== Cookie.prototype[prop]) {\n        obj[prop] = this[prop];\n      }\n    }\n  }\n\n  return obj;\n};\n\nCookie.prototype.clone = function() {\n  return fromJSON(this.toJSON());\n};\n\nCookie.prototype.validate = function validate() {\n  if (!COOKIE_OCTETS.test(this.value)) {\n    return false;\n  }\n  if (this.expires != Infinity && !(this.expires instanceof Date) && !parseDate(this.expires)) {\n    return false;\n  }\n  if (this.maxAge != null && this.maxAge <= 0) {\n    return false; // \"Max-Age=\" non-zero-digit *DIGIT\n  }\n  if (this.path != null && !PATH_VALUE.test(this.path)) {\n    return false;\n  }\n\n  var cdomain = this.cdomain();\n  if (cdomain) {\n    if (cdomain.match(/\\.$/)) {\n      return false; // S4.1.2.3 suggests that this is bad. domainMatch() tests confirm this\n    }\n    var suffix = pubsuffix.getPublicSuffix(cdomain);\n    if (suffix == null) { // it's a public suffix\n      return false;\n    }\n  }\n  return true;\n};\n\nCookie.prototype.setExpires = function setExpires(exp) {\n  if (exp instanceof Date) {\n    this.expires = exp;\n  } else {\n    this.expires = parseDate(exp) || \"Infinity\";\n  }\n};\n\nCookie.prototype.setMaxAge = function setMaxAge(age) {\n  if (age === Infinity || age === -Infinity) {\n    this.maxAge = age.toString(); // so JSON.stringify() works\n  } else {\n    this.maxAge = age;\n  }\n};\n\n// gives Cookie header format\nCookie.prototype.cookieString = function cookieString() {\n  var val = this.value;\n  if (val == null) {\n    val = '';\n  }\n  if (this.key === '') {\n    return val;\n  }\n  return this.key+'='+val;\n};\n\n// gives Set-Cookie header format\nCookie.prototype.toString = function toString() {\n  var str = this.cookieString();\n\n  if (this.expires != Infinity) {\n    if (this.expires instanceof Date) {\n      str += '; Expires='+formatDate(this.expires);\n    } else {\n      str += '; Expires='+this.expires;\n    }\n  }\n\n  if (this.maxAge != null && this.maxAge != Infinity) {\n    str += '; Max-Age='+this.maxAge;\n  }\n\n  if (this.domain && !this.hostOnly) {\n    str += '; Domain='+this.domain;\n  }\n  if (this.path) {\n    str += '; Path='+this.path;\n  }\n\n  if (this.secure) {\n    str += '; Secure';\n  }\n  if (this.httpOnly) {\n    str += '; HttpOnly';\n  }\n  if (this.extensions) {\n    this.extensions.forEach(function(ext) {\n      str += '; '+ext;\n    });\n  }\n\n  return str;\n};\n\n// TTL() partially replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n// elsewhere)\n// S5.3 says to give the \"latest representable date\" for which we use Infinity\n// For \"expired\" we use 0\nCookie.prototype.TTL = function TTL(now) {\n  /* RFC6265 S4.1.2.2 If a cookie has both the Max-Age and the Expires\n   * attribute, the Max-Age attribute has precedence and controls the\n   * expiration date of the cookie.\n   * (Concurs with S5.3 step 3)\n   */\n  if (this.maxAge != null) {\n    return this.maxAge<=0 ? 0 : this.maxAge*1000;\n  }\n\n  var expires = this.expires;\n  if (expires != Infinity) {\n    if (!(expires instanceof Date)) {\n      expires = parseDate(expires) || Infinity;\n    }\n\n    if (expires == Infinity) {\n      return Infinity;\n    }\n\n    return expires.getTime() - (now || Date.now());\n  }\n\n  return Infinity;\n};\n\n// expiryTime() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n// elsewhere)\nCookie.prototype.expiryTime = function expiryTime(now) {\n  if (this.maxAge != null) {\n    var relativeTo = now || this.creation || new Date();\n    var age = (this.maxAge <= 0) ? -Infinity : this.maxAge*1000;\n    return relativeTo.getTime() + age;\n  }\n\n  if (this.expires == Infinity) {\n    return Infinity;\n  }\n  return this.expires.getTime();\n};\n\n// expiryDate() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n// elsewhere), except it returns a Date\nCookie.prototype.expiryDate = function expiryDate(now) {\n  var millisec = this.expiryTime(now);\n  if (millisec == Infinity) {\n    return new Date(MAX_TIME);\n  } else if (millisec == -Infinity) {\n    return new Date(MIN_TIME);\n  } else {\n    return new Date(millisec);\n  }\n};\n\n// This replaces the \"persistent-flag\" parts of S5.3 step 3\nCookie.prototype.isPersistent = function isPersistent() {\n  return (this.maxAge != null || this.expires != Infinity);\n};\n\n// Mostly S5.1.2 and S5.2.3:\nCookie.prototype.cdomain =\nCookie.prototype.canonicalizedDomain = function canonicalizedDomain() {\n  if (this.domain == null) {\n    return null;\n  }\n  return canonicalDomain(this.domain);\n};\n\nfunction CookieJar(store, options) {\n  if (typeof options === \"boolean\") {\n    options = {rejectPublicSuffixes: options};\n  } else if (options == null) {\n    options = {};\n  }\n  if (options.rejectPublicSuffixes != null) {\n    this.rejectPublicSuffixes = options.rejectPublicSuffixes;\n  }\n  if (options.looseMode != null) {\n    this.enableLooseMode = options.looseMode;\n  }\n\n  if (!store) {\n    store = new MemoryCookieStore();\n  }\n  this.store = store;\n}\nCookieJar.prototype.store = null;\nCookieJar.prototype.rejectPublicSuffixes = true;\nCookieJar.prototype.enableLooseMode = false;\nvar CAN_BE_SYNC = [];\n\nCAN_BE_SYNC.push('setCookie');\nCookieJar.prototype.setCookie = function(cookie, url, options, cb) {\n  var err;\n  var context = getCookieContext(url);\n  if (options instanceof Function) {\n    cb = options;\n    options = {};\n  }\n\n  var host = canonicalDomain(context.hostname);\n  var loose = this.enableLooseMode;\n  if (options.loose != null) {\n    loose = options.loose;\n  }\n\n  // S5.3 step 1\n  if (!(cookie instanceof Cookie)) {\n    cookie = Cookie.parse(cookie, { loose: loose });\n  }\n  if (!cookie) {\n    err = new Error(\"Cookie failed to parse\");\n    return cb(options.ignoreError ? null : err);\n  }\n\n  // S5.3 step 2\n  var now = options.now || new Date(); // will assign later to save effort in the face of errors\n\n  // S5.3 step 3: NOOP; persistent-flag and expiry-time is handled by getCookie()\n\n  // S5.3 step 4: NOOP; domain is null by default\n\n  // S5.3 step 5: public suffixes\n  if (this.rejectPublicSuffixes && cookie.domain) {\n    var suffix = pubsuffix.getPublicSuffix(cookie.cdomain());\n    if (suffix == null) { // e.g. \"com\"\n      err = new Error(\"Cookie has domain set to a public suffix\");\n      return cb(options.ignoreError ? null : err);\n    }\n  }\n\n  // S5.3 step 6:\n  if (cookie.domain) {\n    if (!domainMatch(host, cookie.cdomain(), false)) {\n      err = new Error(\"Cookie not in this host's domain. Cookie:\"+cookie.cdomain()+\" Request:\"+host);\n      return cb(options.ignoreError ? null : err);\n    }\n\n    if (cookie.hostOnly == null) { // don't reset if already set\n      cookie.hostOnly = false;\n    }\n\n  } else {\n    cookie.hostOnly = true;\n    cookie.domain = host;\n  }\n\n  //S5.2.4 If the attribute-value is empty or if the first character of the\n  //attribute-value is not %x2F (\"/\"):\n  //Let cookie-path be the default-path.\n  if (!cookie.path || cookie.path[0] !== '/') {\n    cookie.path = defaultPath(context.pathname);\n    cookie.pathIsDefault = true;\n  }\n\n  // S5.3 step 8: NOOP; secure attribute\n  // S5.3 step 9: NOOP; httpOnly attribute\n\n  // S5.3 step 10\n  if (options.http === false && cookie.httpOnly) {\n    err = new Error(\"Cookie is HttpOnly and this isn't an HTTP API\");\n    return cb(options.ignoreError ? null : err);\n  }\n\n  var store = this.store;\n\n  if (!store.updateCookie) {\n    store.updateCookie = function(oldCookie, newCookie, cb) {\n      this.putCookie(newCookie, cb);\n    };\n  }\n\n  function withCookie(err, oldCookie) {\n    if (err) {\n      return cb(err);\n    }\n\n    var next = function(err) {\n      if (err) {\n        return cb(err);\n      } else {\n        cb(null, cookie);\n      }\n    };\n\n    if (oldCookie) {\n      // S5.3 step 11 - \"If the cookie store contains a cookie with the same name,\n      // domain, and path as the newly created cookie:\"\n      if (options.http === false && oldCookie.httpOnly) { // step 11.2\n        err = new Error(\"old Cookie is HttpOnly and this isn't an HTTP API\");\n        return cb(options.ignoreError ? null : err);\n      }\n      cookie.creation = oldCookie.creation; // step 11.3\n      cookie.creationIndex = oldCookie.creationIndex; // preserve tie-breaker\n      cookie.lastAccessed = now;\n      // Step 11.4 (delete cookie) is implied by just setting the new one:\n      store.updateCookie(oldCookie, cookie, next); // step 12\n\n    } else {\n      cookie.creation = cookie.lastAccessed = now;\n      store.putCookie(cookie, next); // step 12\n    }\n  }\n\n  store.findCookie(cookie.domain, cookie.path, cookie.key, withCookie);\n};\n\n// RFC6365 S5.4\nCAN_BE_SYNC.push('getCookies');\nCookieJar.prototype.getCookies = function(url, options, cb) {\n  var context = getCookieContext(url);\n  if (options instanceof Function) {\n    cb = options;\n    options = {};\n  }\n\n  var host = canonicalDomain(context.hostname);\n  var path = context.pathname || '/';\n\n  var secure = options.secure;\n  if (secure == null && context.protocol &&\n      (context.protocol == 'https:' || context.protocol == 'wss:'))\n  {\n    secure = true;\n  }\n\n  var http = options.http;\n  if (http == null) {\n    http = true;\n  }\n\n  var now = options.now || Date.now();\n  var expireCheck = options.expire !== false;\n  var allPaths = !!options.allPaths;\n  var store = this.store;\n\n  function matchingCookie(c) {\n    // \"Either:\n    //   The cookie's host-only-flag is true and the canonicalized\n    //   request-host is identical to the cookie's domain.\n    // Or:\n    //   The cookie's host-only-flag is false and the canonicalized\n    //   request-host domain-matches the cookie's domain.\"\n    if (c.hostOnly) {\n      if (c.domain != host) {\n        return false;\n      }\n    } else {\n      if (!domainMatch(host, c.domain, false)) {\n        return false;\n      }\n    }\n\n    // \"The request-uri's path path-matches the cookie's path.\"\n    if (!allPaths && !pathMatch(path, c.path)) {\n      return false;\n    }\n\n    // \"If the cookie's secure-only-flag is true, then the request-uri's\n    // scheme must denote a \"secure\" protocol\"\n    if (c.secure && !secure) {\n      return false;\n    }\n\n    // \"If the cookie's http-only-flag is true, then exclude the cookie if the\n    // cookie-string is being generated for a \"non-HTTP\" API\"\n    if (c.httpOnly && !http) {\n      return false;\n    }\n\n    // deferred from S5.3\n    // non-RFC: allow retention of expired cookies by choice\n    if (expireCheck && c.expiryTime() <= now) {\n      store.removeCookie(c.domain, c.path, c.key, function(){}); // result ignored\n      return false;\n    }\n\n    return true;\n  }\n\n  store.findCookies(host, allPaths ? null : path, function(err,cookies) {\n    if (err) {\n      return cb(err);\n    }\n\n    cookies = cookies.filter(matchingCookie);\n\n    // sorting of S5.4 part 2\n    if (options.sort !== false) {\n      cookies = cookies.sort(cookieCompare);\n    }\n\n    // S5.4 part 3\n    var now = new Date();\n    cookies.forEach(function(c) {\n      c.lastAccessed = now;\n    });\n    // TODO persist lastAccessed\n\n    cb(null,cookies);\n  });\n};\n\nCAN_BE_SYNC.push('getCookieString');\nCookieJar.prototype.getCookieString = function(/*..., cb*/) {\n  var args = Array.prototype.slice.call(arguments,0);\n  var cb = args.pop();\n  var next = function(err,cookies) {\n    if (err) {\n      cb(err);\n    } else {\n      cb(null, cookies\n        .sort(cookieCompare)\n        .map(function(c){\n          return c.cookieString();\n        })\n        .join('; '));\n    }\n  };\n  args.push(next);\n  this.getCookies.apply(this,args);\n};\n\nCAN_BE_SYNC.push('getSetCookieStrings');\nCookieJar.prototype.getSetCookieStrings = function(/*..., cb*/) {\n  var args = Array.prototype.slice.call(arguments,0);\n  var cb = args.pop();\n  var next = function(err,cookies) {\n    if (err) {\n      cb(err);\n    } else {\n      cb(null, cookies.map(function(c){\n        return c.toString();\n      }));\n    }\n  };\n  args.push(next);\n  this.getCookies.apply(this,args);\n};\n\nCAN_BE_SYNC.push('serialize');\nCookieJar.prototype.serialize = function(cb) {\n  var type = this.store.constructor.name;\n  if (type === 'Object') {\n    type = null;\n  }\n\n  // update README.md \"Serialization Format\" if you change this, please!\n  var serialized = {\n    // The version of tough-cookie that serialized this jar. Generally a good\n    // practice since future versions can make data import decisions based on\n    // known past behavior. When/if this matters, use `semver`.\n    version: 'tough-cookie@'+VERSION,\n\n    // add the store type, to make humans happy:\n    storeType: type,\n\n    // CookieJar configuration:\n    rejectPublicSuffixes: !!this.rejectPublicSuffixes,\n\n    // this gets filled from getAllCookies:\n    cookies: []\n  };\n\n  if (!(this.store.getAllCookies &&\n        typeof this.store.getAllCookies === 'function'))\n  {\n    return cb(new Error('store does not support getAllCookies and cannot be serialized'));\n  }\n\n  this.store.getAllCookies(function(err,cookies) {\n    if (err) {\n      return cb(err);\n    }\n\n    serialized.cookies = cookies.map(function(cookie) {\n      // convert to serialized 'raw' cookies\n      cookie = (cookie instanceof Cookie) ? cookie.toJSON() : cookie;\n\n      // Remove the index so new ones get assigned during deserialization\n      delete cookie.creationIndex;\n\n      return cookie;\n    });\n\n    return cb(null, serialized);\n  });\n};\n\n// well-known name that JSON.stringify calls\nCookieJar.prototype.toJSON = function() {\n  return this.serializeSync();\n};\n\n// use the class method CookieJar.deserialize instead of calling this directly\nCAN_BE_SYNC.push('_importCookies');\nCookieJar.prototype._importCookies = function(serialized, cb) {\n  var jar = this;\n  var cookies = serialized.cookies;\n  if (!cookies || !Array.isArray(cookies)) {\n    return cb(new Error('serialized jar has no cookies array'));\n  }\n  cookies = cookies.slice(); // do not modify the original\n\n  function putNext(err) {\n    if (err) {\n      return cb(err);\n    }\n\n    if (!cookies.length) {\n      return cb(err, jar);\n    }\n\n    var cookie;\n    try {\n      cookie = fromJSON(cookies.shift());\n    } catch (e) {\n      return cb(e);\n    }\n\n    if (cookie === null) {\n      return putNext(null); // skip this cookie\n    }\n\n    jar.store.putCookie(cookie, putNext);\n  }\n\n  putNext();\n};\n\nCookieJar.deserialize = function(strOrObj, store, cb) {\n  if (arguments.length !== 3) {\n    // store is optional\n    cb = store;\n    store = null;\n  }\n\n  var serialized;\n  if (typeof strOrObj === 'string') {\n    serialized = jsonParse(strOrObj);\n    if (serialized instanceof Error) {\n      return cb(serialized);\n    }\n  } else {\n    serialized = strOrObj;\n  }\n\n  var jar = new CookieJar(store, serialized.rejectPublicSuffixes);\n  jar._importCookies(serialized, function(err) {\n    if (err) {\n      return cb(err);\n    }\n    cb(null, jar);\n  });\n};\n\nCookieJar.deserializeSync = function(strOrObj, store) {\n  var serialized = typeof strOrObj === 'string' ?\n    JSON.parse(strOrObj) : strOrObj;\n  var jar = new CookieJar(store, serialized.rejectPublicSuffixes);\n\n  // catch this mistake early:\n  if (!jar.store.synchronous) {\n    throw new Error('CookieJar store is not synchronous; use async API instead.');\n  }\n\n  jar._importCookiesSync(serialized);\n  return jar;\n};\nCookieJar.fromJSON = CookieJar.deserializeSync;\n\nCookieJar.prototype.clone = function(newStore, cb) {\n  if (arguments.length === 1) {\n    cb = newStore;\n    newStore = null;\n  }\n\n  this.serialize(function(err,serialized) {\n    if (err) {\n      return cb(err);\n    }\n    CookieJar.deserialize(serialized, newStore, cb);\n  });\n};\n\nCAN_BE_SYNC.push('removeAllCookies');\nCookieJar.prototype.removeAllCookies = function(cb) {\n  var store = this.store;\n\n  // Check that the store implements its own removeAllCookies(). The default\n  // implementation in Store will immediately call the callback with a \"not\n  // implemented\" Error.\n  if (store.removeAllCookies instanceof Function &&\n      store.removeAllCookies !== Store.prototype.removeAllCookies)\n  {\n    return store.removeAllCookies(cb);\n  }\n\n  store.getAllCookies(function(err, cookies) {\n    if (err) {\n      return cb(err);\n    }\n\n    if (cookies.length === 0) {\n      return cb(null);\n    }\n\n    var completedCount = 0;\n    var removeErrors = [];\n\n    function removeCookieCb(removeErr) {\n      if (removeErr) {\n        removeErrors.push(removeErr);\n      }\n\n      completedCount++;\n\n      if (completedCount === cookies.length) {\n        return cb(removeErrors.length ? removeErrors[0] : null);\n      }\n    }\n\n    cookies.forEach(function(cookie) {\n      store.removeCookie(cookie.domain, cookie.path, cookie.key, removeCookieCb);\n    });\n  });\n};\n\nCookieJar.prototype._cloneSync = syncWrap('clone');\nCookieJar.prototype.cloneSync = function(newStore) {\n  if (!newStore.synchronous) {\n    throw new Error('CookieJar clone destination store is not synchronous; use async API instead.');\n  }\n  return this._cloneSync(newStore);\n};\n\n// Use a closure to provide a true imperative API for synchronous stores.\nfunction syncWrap(method) {\n  return function() {\n    if (!this.store.synchronous) {\n      throw new Error('CookieJar store is not synchronous; use async API instead.');\n    }\n\n    var args = Array.prototype.slice.call(arguments);\n    var syncErr, syncResult;\n    args.push(function syncCb(err, result) {\n      syncErr = err;\n      syncResult = result;\n    });\n    this[method].apply(this, args);\n\n    if (syncErr) {\n      throw syncErr;\n    }\n    return syncResult;\n  };\n}\n\n// wrap all declared CAN_BE_SYNC methods in the sync wrapper\nCAN_BE_SYNC.forEach(function(method) {\n  CookieJar.prototype[method+'Sync'] = syncWrap(method);\n});\n\nexports.version = VERSION;\nexports.CookieJar = CookieJar;\nexports.Cookie = Cookie;\nexports.Store = Store;\nexports.MemoryCookieStore = MemoryCookieStore;\nexports.parseDate = parseDate;\nexports.formatDate = formatDate;\nexports.parse = parse;\nexports.fromJSON = fromJSON;\nexports.domainMatch = domainMatch;\nexports.defaultPath = defaultPath;\nexports.pathMatch = pathMatch;\nexports.getPublicSuffix = pubsuffix.getPublicSuffix;\nexports.cookieCompare = cookieCompare;\nexports.permuteDomain = require('./permuteDomain').permuteDomain;\nexports.permutePath = permutePath;\nexports.canonicalDomain = canonicalDomain;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}