{"ast":null,"code":"'use strict';\n\nvar tough = require('tough-cookie');\n\nvar Cookie = tough.Cookie;\nvar CookieJar = tough.CookieJar;\n\nexports.parse = function (str) {\n  if (str && str.uri) {\n    str = str.uri;\n  }\n\n  if (typeof str !== 'string') {\n    throw new Error('The cookie function only accepts STRING as param');\n  }\n\n  return Cookie.parse(str, {\n    loose: true\n  });\n}; // Adapt the sometimes-Async api of tough.CookieJar to our requirements\n\n\nfunction RequestJar(store) {\n  var self = this;\n  self._jar = new CookieJar(store, {\n    looseMode: true\n  });\n}\n\nRequestJar.prototype.setCookie = function (cookieOrStr, uri, options) {\n  var self = this;\n  return self._jar.setCookieSync(cookieOrStr, uri, options || {});\n};\n\nRequestJar.prototype.getCookieString = function (uri) {\n  var self = this;\n  return self._jar.getCookieStringSync(uri);\n};\n\nRequestJar.prototype.getCookies = function (uri) {\n  var self = this;\n  return self._jar.getCookiesSync(uri);\n};\n\nexports.jar = function (store) {\n  return new RequestJar(store);\n};","map":{"version":3,"names":["tough","require","Cookie","CookieJar","exports","parse","str","uri","Error","loose","RequestJar","store","self","_jar","looseMode","prototype","setCookie","cookieOrStr","options","setCookieSync","getCookieString","getCookieStringSync","getCookies","getCookiesSync","jar"],"sources":["D:/siit/Y4S1/senior_project/web_practice1/my-app/node_modules/request/lib/cookies.js"],"sourcesContent":["'use strict'\n\nvar tough = require('tough-cookie')\n\nvar Cookie = tough.Cookie\nvar CookieJar = tough.CookieJar\n\nexports.parse = function (str) {\n  if (str && str.uri) {\n    str = str.uri\n  }\n  if (typeof str !== 'string') {\n    throw new Error('The cookie function only accepts STRING as param')\n  }\n  return Cookie.parse(str, {loose: true})\n}\n\n// Adapt the sometimes-Async api of tough.CookieJar to our requirements\nfunction RequestJar (store) {\n  var self = this\n  self._jar = new CookieJar(store, {looseMode: true})\n}\nRequestJar.prototype.setCookie = function (cookieOrStr, uri, options) {\n  var self = this\n  return self._jar.setCookieSync(cookieOrStr, uri, options || {})\n}\nRequestJar.prototype.getCookieString = function (uri) {\n  var self = this\n  return self._jar.getCookieStringSync(uri)\n}\nRequestJar.prototype.getCookies = function (uri) {\n  var self = this\n  return self._jar.getCookiesSync(uri)\n}\n\nexports.jar = function (store) {\n  return new RequestJar(store)\n}\n"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAEA,IAAIC,MAAM,GAAGF,KAAK,CAACE,MAAnB;AACA,IAAIC,SAAS,GAAGH,KAAK,CAACG,SAAtB;;AAEAC,OAAO,CAACC,KAAR,GAAgB,UAAUC,GAAV,EAAe;EAC7B,IAAIA,GAAG,IAAIA,GAAG,CAACC,GAAf,EAAoB;IAClBD,GAAG,GAAGA,GAAG,CAACC,GAAV;EACD;;EACD,IAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6B;IAC3B,MAAM,IAAIE,KAAJ,CAAU,kDAAV,CAAN;EACD;;EACD,OAAON,MAAM,CAACG,KAAP,CAAaC,GAAb,EAAkB;IAACG,KAAK,EAAE;EAAR,CAAlB,CAAP;AACD,CARD,C,CAUA;;;AACA,SAASC,UAAT,CAAqBC,KAArB,EAA4B;EAC1B,IAAIC,IAAI,GAAG,IAAX;EACAA,IAAI,CAACC,IAAL,GAAY,IAAIV,SAAJ,CAAcQ,KAAd,EAAqB;IAACG,SAAS,EAAE;EAAZ,CAArB,CAAZ;AACD;;AACDJ,UAAU,CAACK,SAAX,CAAqBC,SAArB,GAAiC,UAAUC,WAAV,EAAuBV,GAAvB,EAA4BW,OAA5B,EAAqC;EACpE,IAAIN,IAAI,GAAG,IAAX;EACA,OAAOA,IAAI,CAACC,IAAL,CAAUM,aAAV,CAAwBF,WAAxB,EAAqCV,GAArC,EAA0CW,OAAO,IAAI,EAArD,CAAP;AACD,CAHD;;AAIAR,UAAU,CAACK,SAAX,CAAqBK,eAArB,GAAuC,UAAUb,GAAV,EAAe;EACpD,IAAIK,IAAI,GAAG,IAAX;EACA,OAAOA,IAAI,CAACC,IAAL,CAAUQ,mBAAV,CAA8Bd,GAA9B,CAAP;AACD,CAHD;;AAIAG,UAAU,CAACK,SAAX,CAAqBO,UAArB,GAAkC,UAAUf,GAAV,EAAe;EAC/C,IAAIK,IAAI,GAAG,IAAX;EACA,OAAOA,IAAI,CAACC,IAAL,CAAUU,cAAV,CAAyBhB,GAAzB,CAAP;AACD,CAHD;;AAKAH,OAAO,CAACoB,GAAR,GAAc,UAAUb,KAAV,EAAiB;EAC7B,OAAO,IAAID,UAAJ,CAAeC,KAAf,CAAP;AACD,CAFD"},"metadata":{},"sourceType":"script"}